//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <PhotosUI/PUViewControllerSpec.h>

@class PUOneUpViewControllerSpecChange, UIColor;

__attribute__((visibility("hidden")))
@interface PUOneUpViewControllerSpec : PUViewControllerSpec
{
    _Bool _isChromeVisible;
    _Bool _isPresentedForPreview;
    _Bool _isShowingPlayPauseButtonInBars;
    _Bool _shouldPlaceButtonsInNavigationBar;
    _Bool _shouldUseCompactTitleView;
    _Bool _shouldUseContentGuideInsets;
    _Bool _shouldUseUserTransformTiles;
    _Bool _shouldDisplayBadges;
    _Bool _shouldDisplayPlayButtons;
    _Bool _shouldDisplayProgressIndicators;
    _Bool _shouldAutoplayOnAppear;
    _Bool _shouldDisplayBufferingIndicators;
    _Bool _shouldDisplayLoadingIndicators;
    _Bool _shouldDisplayEmptyPlaceholder;
    _Bool _shouldUseCompactCommentSeparator;
    _Bool _shouldUseCompactCommentsTitle;
    _Bool _shouldPinContentToTop;
    _Bool _shouldUseCommentTiles;
    double _maximumToolbarHeight;
    UIColor *_backgroundColorOverride;
    long long _tileInitialContentMode;
    struct CGSize _progressIndicatorSize;
    struct CGSize _bufferingIndicatorSize;
    struct CGSize _loadingIndicatorSize;
}

@property(nonatomic) _Bool shouldUseCommentTiles; // @synthesize shouldUseCommentTiles=_shouldUseCommentTiles;
@property(nonatomic) _Bool shouldPinContentToTop; // @synthesize shouldPinContentToTop=_shouldPinContentToTop;
@property(nonatomic) long long tileInitialContentMode; // @synthesize tileInitialContentMode=_tileInitialContentMode;
@property(nonatomic) _Bool shouldUseCompactCommentsTitle; // @synthesize shouldUseCompactCommentsTitle=_shouldUseCompactCommentsTitle;
@property(nonatomic) _Bool shouldUseCompactCommentSeparator; // @synthesize shouldUseCompactCommentSeparator=_shouldUseCompactCommentSeparator;
@property(nonatomic) struct CGSize loadingIndicatorSize; // @synthesize loadingIndicatorSize=_loadingIndicatorSize;
@property(nonatomic) struct CGSize bufferingIndicatorSize; // @synthesize bufferingIndicatorSize=_bufferingIndicatorSize;
@property(nonatomic) struct CGSize progressIndicatorSize; // @synthesize progressIndicatorSize=_progressIndicatorSize;
@property(retain, nonatomic) UIColor *backgroundColorOverride; // @synthesize backgroundColorOverride=_backgroundColorOverride;
@property(nonatomic) _Bool shouldDisplayEmptyPlaceholder; // @synthesize shouldDisplayEmptyPlaceholder=_shouldDisplayEmptyPlaceholder;
@property(nonatomic) _Bool shouldDisplayLoadingIndicators; // @synthesize shouldDisplayLoadingIndicators=_shouldDisplayLoadingIndicators;
@property(nonatomic) _Bool shouldDisplayBufferingIndicators; // @synthesize shouldDisplayBufferingIndicators=_shouldDisplayBufferingIndicators;
@property(nonatomic) _Bool shouldAutoplayOnAppear; // @synthesize shouldAutoplayOnAppear=_shouldAutoplayOnAppear;
@property(nonatomic) _Bool shouldDisplayProgressIndicators; // @synthesize shouldDisplayProgressIndicators=_shouldDisplayProgressIndicators;
@property(nonatomic) _Bool shouldDisplayPlayButtons; // @synthesize shouldDisplayPlayButtons=_shouldDisplayPlayButtons;
@property(nonatomic) _Bool shouldDisplayBadges; // @synthesize shouldDisplayBadges=_shouldDisplayBadges;
@property(nonatomic) _Bool shouldUseUserTransformTiles; // @synthesize shouldUseUserTransformTiles=_shouldUseUserTransformTiles;
@property(nonatomic) _Bool shouldUseContentGuideInsets; // @synthesize shouldUseContentGuideInsets=_shouldUseContentGuideInsets;
- (void)_setMaximumToolbarHeight:(double)arg1;
@property(nonatomic) double maximumToolbarHeight; // @synthesize maximumToolbarHeight=_maximumToolbarHeight;
@property(nonatomic) _Bool shouldUseCompactTitleView; // @synthesize shouldUseCompactTitleView=_shouldUseCompactTitleView;
@property(nonatomic) _Bool shouldPlaceButtonsInNavigationBar; // @synthesize shouldPlaceButtonsInNavigationBar=_shouldPlaceButtonsInNavigationBar;
@property(nonatomic, setter=setShowingPlayPauseButtonInBars:) _Bool isShowingPlayPauseButtonInBars; // @synthesize isShowingPlayPauseButtonInBars=_isShowingPlayPauseButtonInBars;
@property(nonatomic, setter=setPresentedForPreview:) _Bool isPresentedForPreview; // @synthesize isPresentedForPreview=_isPresentedForPreview;
@property(nonatomic, setter=setChromeVisible:) _Bool isChromeVisible; // @synthesize isChromeVisible=_isChromeVisible;
- (void).cxx_destruct;
- (void)_setShouldUseCommentTiles:(_Bool)arg1;
- (void)_setShouldPinContentToTop:(_Bool)arg1;
- (void)_setTileInitialContentMode:(long long)arg1;
- (void)_setShouldUseCompactCommentsTitle:(_Bool)arg1;
- (void)_setShouldUseCompactCommentSeparator:(_Bool)arg1;
- (void)_setLoadingIndicatorSize:(struct CGSize)arg1;
- (void)_setBufferingIndicatorSize:(struct CGSize)arg1;
- (void)_setProgressIndicatorSize:(struct CGSize)arg1;
- (void)_setBackgroundColorOverride:(id)arg1;
- (void)_setShouldDisplayEmptyPlaceholder:(_Bool)arg1;
- (void)_setShouldDisplayLoadingIndicators:(_Bool)arg1;
- (void)_setShouldDisplayBufferingIndicators:(_Bool)arg1;
- (void)_setShouldDisplayProgressIndicators:(_Bool)arg1;
- (void)_setShouldDisplayPlayButtons:(_Bool)arg1;
- (void)_setShouldDisplayBadges:(_Bool)arg1;
- (void)_setShouldAutoplayOnAppear:(_Bool)arg1;
- (void)_setShouldUseUserTransformTiles:(_Bool)arg1;
- (void)_setShouldUseContentGuideInsets:(_Bool)arg1;
- (void)_setShouldUseCompactTitleView:(_Bool)arg1;
- (void)_setShouldPlaceButtonsInNavigationBar:(_Bool)arg1;
@property(readonly, nonatomic) struct CGSize playButtonSize;
- (void)updateIfNeeded;
@property(readonly, nonatomic) PUOneUpViewControllerSpecChange *currentChange;
- (id)newSpecChange;

@end

