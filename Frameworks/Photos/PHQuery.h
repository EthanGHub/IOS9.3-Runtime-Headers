//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Photos/NSCopying-Protocol.h>
#import <Photos/NSPredicateVisitor-Protocol.h>

@class NSArray, NSFetchRequest, NSManagedObjectID, NSMutableSet, NSPredicate, NSRelationshipDescription, NSString, PHCollection, PHFetchOptions, PHPhotoLibrary;

@interface PHQuery : NSObject <NSPredicateVisitor, NSCopying>
{
    NSPredicate *_cachedFetchOptionsPredicate;
    NSPredicate *_basePredicate;
    NSPredicate *_filterPredicate;
    NSFetchRequest *_fetchRequest;
    long long _collectionFetchType;
    _Bool _preparedContainerInfo;
    NSRelationshipDescription *_containerRelationship;
    NSManagedObjectID *_containerIdentifier;
    PHCollection *_containerCollection;
    _Bool _preparedCombinedQueryKeys;
    id _combinedQueryGroupKey;
    NSString *_combinedQueryKeyPath;
    NSManagedObjectID *_combinedQuerySeparatingIdentifier;
    _Bool _preparedFilteringAttributes;
    NSMutableSet *_filteringKeys;
    unsigned long long _filteringAttributesIndexValue;
    unsigned long long _filteringRelationshipsIndexValue;
    unsigned long long _objectToContainerRelationshipIndexValue;
    unsigned long long _containerToObjectRelationshipIndexValue;
    unsigned long long _containerSortingAttributesIndexValue;
    _Bool __includesTrashedObjects;
    _Bool __includesCameraRoll;
    PHFetchOptions *_fetchOptions;
    NSString *_fetchType;
    NSArray *_seedOIDs;
    PHPhotoLibrary *_photoLibrary;
}

+ (void)min:(id *)arg1 andMax:(id *)arg2 forKeypath:(id)arg3 ForType:(id)arg4 restrictedToOIDs:(id)arg5 inLibrary:(id)arg6;
+ (id)queryForMomentListsWithSubType:(long long)arg1 options:(id)arg2;
+ (id)queryForMomentListsWithSubType:(long long)arg1 containingMoment:(id)arg2;
+ (id)queryForCloudSharedAlbums;
+ (id)queryForTopLevelUserCollections;
+ (id)queryForRootAlbumCollectionList;
+ (id)_rootFolderID;
+ (id)queryForCollectionListsWithType:(long long)arg1 subtype:(long long)arg2 options:(id)arg3;
+ (id)queryForCollectionListsWithCloudIdentifiers:(id)arg1;
+ (id)queryForCollectionListsWithLocalIdentifiers:(id)arg1;
+ (id)queryForCollectionListContainingCollection:(id)arg1;
+ (id)queryForCollectionsInCollectionList:(id)arg1;
+ (id)queryForMomentsContainingAssetsWithLocalIdentifiers:(id)arg1;
+ (id)queryForMomentsInMomentList:(id)arg1;
+ (id)queryForMoments;
+ (id)queryForAssetCollectionsWithObjectIDs:(id)arg1;
+ (id)queryForAssetCollectionsWithType:(long long)arg1 subtype:(long long)arg2 options:(id)arg3;
+ (id)queryForAssetCollectionsWithCloudIdentifiers:(id)arg1;
+ (id)queryForAssetCollectionsWithLocalIdentifiers:(id)arg1;
+ (id)queryForAssetCollectionsContainingAsset:(id)arg1 withType:(long long)arg2;
+ (id)queryForKeyAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)queryForCustomKeyAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)queryForAssetsWithBurstIdentifier:(id)arg1 options:(id)arg2;
+ (id)queryForAssetsWithObjectIDs:(id)arg1 options:(id)arg2;
+ (id)queryForAssetsWithOptions:(id)arg1;
+ (id)queryForAssetsWithCloudIdentifiers:(id)arg1 options:(id)arg2;
+ (id)queryForAssetsWithLocalIdentifiers:(id)arg1 options:(id)arg2;
+ (id)queryForType:(id)arg1 withIdentifiers:(id)arg2 local:(_Bool)arg3;
+ (id)queryForAssetsWithMediaType:(long long)arg1 options:(id)arg2;
+ (id)queryForAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)_fetchOptionsForFetchingAssetsFromAssetCollection:(id)arg1 options:(id)arg2;
+ (id)combinedFetchRequestForQueries:(id)arg1;
+ (id)_filterPredicateFromFetchOptionsPredicate:(id)arg1 options:(id)arg2 phClass:(Class)arg3;
+ (id)_containerIdentifierForFetchType:(id)arg1 predicate:(id)arg2 outRelationship:(id *)arg3;
+ (id)_transformedSortDescriptors:(id)arg1 forFetchType:(id)arg2;
+ (id)defaultSortDescriptorForFetchType:(id)arg1 predicate:(id)arg2;
+ (id)_relationshipForFetchType:(id)arg1 predicate:(id)arg2;
+ (id)queryForType:(id)arg1 withBasePredicate:(id)arg2 seedOIDs:(id)arg3 inLibrary:(id)arg4;
+ (id)queryForType:(id)arg1 withBasePredicate:(id)arg2 inLibrary:(id)arg3;
@property(nonatomic, setter=_setIncludesCameraRoll:) _Bool _includesCameraRoll; // @synthesize _includesCameraRoll=__includesCameraRoll;
@property(nonatomic, setter=_setIncludesTrashedObjects:) _Bool _includesTrashedObjects; // @synthesize _includesTrashedObjects=__includesTrashedObjects;
@property(readonly) PHPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
@property(readonly) NSArray *seedOIDs; // @synthesize seedOIDs=_seedOIDs;
@property(readonly) NSPredicate *basePredicate; // @synthesize basePredicate=_basePredicate;
@property(readonly) NSString *fetchType; // @synthesize fetchType=_fetchType;
@property(copy, nonatomic) PHFetchOptions *fetchOptions; // @synthesize fetchOptions=_fetchOptions;
- (void).cxx_destruct;
- (id)description;
- (void)visitPredicateExpression:(id)arg1;
- (void)visitPredicateOperator:(id)arg1;
- (void)visitPredicate:(id)arg1;
- (void)_prepareFilteringAttributes;
- (unsigned long long)containerToObjectRelationshipIndexValue;
- (unsigned long long)objectToContainerRelationshipIndexValue;
- (unsigned long long)filteringRelationshipsIndexValue;
- (unsigned long long)filteringAttributesIndexValue;
- (unsigned long long)containerSortingAttributesIndexValue;
@property(readonly) NSManagedObjectID *combinedQuerySeparatingIdentifier;
@property(readonly) NSString *combinedQueryKeyPath;
@property(readonly) id combinedQueryGroupKey;
- (void)_prepareCombinedQueryKeys;
- (id)executeQuery;
- (id)effectivePredicateForPHClass:(Class)arg1 request:(id)arg2 includingBasePredicate:(_Bool)arg3;
@property(readonly) NSPredicate *filterPredicate;
- (void)_prepareContainerInfo;
- (void)_setContainerCollection:(id)arg1;
- (id)containerIdentifier;
- (id)_containerRelationship;
- (long long)collectionFetchType;
@property(readonly) NSFetchRequest *fetchRequest;
- (id)_effectiveSortDescriptors;
- (_Bool)_isAlbumContentTitleSort;
- (_Bool)_isAlbumContentSort;
- (id)_createFetchRequestIncludingBasePredicate:(_Bool)arg1;
- (id)updatedQueryWithChange:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initForType:(id)arg1 withBasePredicate:(id)arg2 inLibrary:(id)arg3;
- (id)initForType:(id)arg1 withBasePredicate:(id)arg2 seedOIDs:(id)arg3 inLibrary:(id)arg4;

@end

