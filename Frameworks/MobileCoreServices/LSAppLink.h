//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <MobileCoreServices/NSSecureCoding-Protocol.h>

@class LSApplicationProxy, NSURL;

@interface LSAppLink : NSObject <NSSecureCoding>
{
    NSURL *_URL;
    LSApplicationProxy *_targetApplicationProxy;
}

+ (_Bool)supportsSecureCoding;
+ (void)openWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)getAppLinkWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)setShouldHandleURL:(id)arg1 fromBrowser:(_Bool)arg2 asAppLink:(_Bool)arg3;
+ (void)_openWithState:(id)arg1 XPCConnection:(id)arg2 machPort:(unsigned int)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (id)_appLinkWithURL:(id)arg1 applicationProxy:(id)arg2 plugIn:(id)arg3 error:(id *)arg4;
+ (void)_getAppLinkWithURL:(id)arg1 requireEntitlement:(_Bool)arg2 XPCConnection:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (_Bool)_shouldAppLinkOpenWithStrategy:(long long)arg1 XPCConnection:(id)arg2;
+ (void)_setOpenStrategy:(long long)arg1 forBundleIdentifier:(id)arg2 XPCConnection:(id)arg3;
+ (long long)_openStrategyForBundleIdentifier:(id)arg1;
+ (_Bool)_XPCConnectionIsBrowser:(id)arg1;
+ (_Bool)URLComponentsAreValidForAppLinks:(id)arg1 error:(id *)arg2;
+ (void)considerPlugInClassAtIndex:(unsigned long long)arg1 plugInClasses:(id)arg2 URLComponents:(id)arg3 XPCConnection:(id)arg4 previousPlugInError:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
+ (id)dispatchQueue;
@property(retain) LSApplicationProxy *targetApplicationProxy; // @synthesize targetApplicationProxy=_targetApplicationProxy;
@property(copy) NSURL *URL; // @synthesize URL=_URL;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)debugDescription;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)openInWebBrowser:(_Bool)arg1 setOpenStrategy:(long long)arg2 webBrowserState:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)openInWebBrowser:(_Bool)arg1 setAppropriateOpenStrategyAndWebBrowserState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property long long openStrategy; // @dynamic openStrategy;

@end

