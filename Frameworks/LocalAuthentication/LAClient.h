//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <LocalAuthentication/LAContextCallbackXPC-Protocol.h>
#import <LocalAuthentication/LAContextXPC-Protocol.h>

@class NSData, NSError, NSMutableArray, NSXPCConnection;
@protocol LAContextXPC, LAUIDelegate;

@interface LAClient : NSObject <LAContextXPC, LAContextCallbackXPC>
{
    id <LAContextXPC> _remoteContext;
    NSXPCConnection *_daemonConnection;
    NSError *_permanentError;
    NSMutableArray *_callInvalidationBlocks;
    _Bool _shouldRecoverConnection;
    NSData *_externalizedContext;
    id <LAUIDelegate> _uiDelegate;
    NSData *_connectToContext;
}

+ (void)_performInvalidationBlocks:(id)arg1;
+ (void)clientWithExternalizedContext:(id)arg1 uiDelegate:(id)arg2 reply:(CDUnknownBlockType)arg3;
+ (id)clientWithExternalizedContext:(id)arg1 uiDelegate:(id)arg2 error:(id *)arg3;
+ (id)_recoveryQueue;
+ (id)_queue;
@property(retain, nonatomic) NSData *connectToContext; // @synthesize connectToContext=_connectToContext;
@property(nonatomic) __weak id <LAUIDelegate> uiDelegate; // @synthesize uiDelegate=_uiDelegate;
@property(readonly) NSData *externalizedContext; // @synthesize externalizedContext=_externalizedContext;
- (void).cxx_destruct;
- (void)prearmTouchIdWithReply:(CDUnknownBlockType)arg1;
- (_Bool)setServerPropertyForOption:(long long)arg1 value:(id)arg2 error:(id *)arg3;
- (id)serverPropertyForOption:(long long)arg1 error:(id *)arg2;
- (void)setServerPropertyForOption:(long long)arg1 value:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)serverPropertyForOption:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)setCredential:(id)arg1 type:(long long)arg2 onlyGet:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;
- (void)enterPassword:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)failProcessedEvent:(long long)arg1 failureError:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)evaluateACL:(id)arg1 operation:(long long)arg2 options:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)evaluatePolicy:(long long)arg1 options:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (id)_updateOptions:(id)arg1;
- (_Bool)_setPermanentError:(id)arg1;
- (void)_performCallBool:(CDUnknownBlockType)arg1 finally:(CDUnknownBlockType)arg2;
- (void)_performCallId:(CDUnknownBlockType)arg1 finally:(CDUnknownBlockType)arg2;
- (void)invalidate;
- (void)dealloc;
- (void)invalidatedWithError:(id)arg1;
- (void)_recoverConnection;
- (void)_scheduleRecovery;
- (void)setupDaemonConnection:(id)arg1 remoteContext:(id)arg2 constInfo:(id)arg3;

@end

