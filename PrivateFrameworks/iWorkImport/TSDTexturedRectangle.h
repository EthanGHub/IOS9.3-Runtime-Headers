//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/NSCopying-Protocol.h>

@class CALayer, NSMutableArray, NSMutableDictionary, NSString, TSDBitmapRenderingQualityInfo, TSDTextureSet, TSUColor;

__attribute__((visibility("hidden")))
@interface TSDTexturedRectangle : NSObject <NSCopying>
{
    struct CGPoint mOffset;
    struct CGPoint mOriginalPosition;
    struct CGSize mSize;
    struct CGRect mContentRect;
    struct CGRect mOriginalFrame;
    CALayer *mLayer;
    CDUnknownBlockType mRenderBlock;
    struct CGImage *mSourceImage;
    struct CGImage *mBakedImage;
    TSDTextureSet *mParent;
    long long mTextureType;
    double mTextureOpacity;
    unsigned int mSingleTextureName;
    _Bool mSingleTextureContainsMipmaps;
    _Bool mIsFlattened;
    _Bool mDidInitFromGLTexture;
    NSMutableDictionary *mAttributes;
    NSMutableArray *mTags;
    struct CGColorSpace *mColorSpace;
    TSDBitmapRenderingQualityInfo *mBitmapRenderingQualityInfo;
    _Bool _isVerticalText;
    double _textBaseline;
    double _textXHeight;
    TSUColor *_textColor;
    NSString *_text;
    struct CGSize _singleTextureSize;
    struct _NSRange _textRange;
}

+ (struct CGRect)boundingRectOnCanvasForTextures:(id)arg1;
+ (struct CGRect)boundingRectForTextures:(id)arg1;
@property(nonatomic) struct _NSRange textRange; // @synthesize textRange=_textRange;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) TSUColor *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) double textXHeight; // @synthesize textXHeight=_textXHeight;
@property(nonatomic) double textBaseline; // @synthesize textBaseline=_textBaseline;
@property(nonatomic) _Bool isVerticalText; // @synthesize isVerticalText=_isVerticalText;
@property(retain, nonatomic) NSMutableArray *tags; // @synthesize tags=mTags;
@property(nonatomic) double textureOpacity; // @synthesize textureOpacity=mTextureOpacity;
@property(nonatomic) long long textureType; // @synthesize textureType=mTextureType;
@property(nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(nonatomic) TSDTextureSet *parent; // @synthesize parent=mParent;
@property(nonatomic) struct CGPoint originalPosition; // @synthesize originalPosition=mOriginalPosition;
@property(nonatomic) _Bool isFlattened; // @synthesize isFlattened=mIsFlattened;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=mLayer;
@property(nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=mColorSpace;
@property(nonatomic) struct CGRect contentRect; // @synthesize contentRect=mContentRect;
@property(retain, nonatomic) TSDBitmapRenderingQualityInfo *bitmapRenderingQualityInfo; // @synthesize bitmapRenderingQualityInfo=mBitmapRenderingQualityInfo;
- (struct CGRect)convertToCanvasCoordinates:(struct CGRect)arg1;
@property(readonly, nonatomic) struct CGRect frameOnCanvas;
@property(readonly, nonatomic) CALayer *parentLayer;
@property(readonly, nonatomic) _Bool isBackgroundTexture;
- (void)renderIntoContext:(struct CGContext *)arg1 shouldApplyAlpha:(_Bool)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1;
- (void)bakeLayerWithAngle:(double)arg1 scale:(double)arg2;
@property(readonly, nonatomic) struct CGImage *image;
@property(readonly, nonatomic) double singleTextureOpacity;
- (void)releaseSingleTexture;
@property(readonly, nonatomic) unsigned int singleTextureTarget;
@property(readonly, nonatomic) struct CGSize singleTextureSize; // @synthesize singleTextureSize=_singleTextureSize;
@property(readonly, nonatomic) unsigned int singleTextureName;
- (void)setupSingleTexture;
- (void)setupSingleTextureAndGenerateMipMaps:(_Bool)arg1;
- (void)renderLayerContentsIfNeeded;
@property(readonly, nonatomic) _Bool isRenderable;
- (void)resetToSourceImage;
- (struct CGImage *)p_newImageAndBufferWithAngle:(double)arg1 scale:(double)arg2 offset:(struct CGPoint)arg3;
- (struct CGColorSpace *)p_colorSpace;
- (void)resetAnchorPoint;
- (void)adjustAnchorRelativeToCenterOfRotation:(struct CGPoint)arg1;
@property(readonly, nonatomic) _Bool isImageSource;
@property(readonly, nonatomic) struct CGRect frame;
@property(nonatomic) struct CGPoint offset;
- (void)p_updateFrame;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;
- (void)teardown;
- (id)initWithTextureInfo:(id)arg1 frame:(struct CGRect)arg2;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithLayer:(id)arg1;
- (id)initWithSize:(struct CGSize)arg1 offset:(struct CGPoint)arg2 renderBlock:(CDUnknownBlockType)arg3;

@end

