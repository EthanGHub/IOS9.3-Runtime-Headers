//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/TSTTableHiddenRowColumnProviding-Protocol.h>
#import <iWorkImport/TSTTableInternalGeometryProviding-Protocol.h>
#import <iWorkImport/TSTTableMergeRangeProviding-Protocol.h>

@class NSIndexSet, NSLock, NSMutableArray, NSMutableSet, NSPointerArray, NSString, TSDFill, TSDInfoGeometry, TSDLayoutGeometry, TSKChangeNotifier, TSTCellRegion, TSTCellSelection, TSTConcurrentMutableIndexSet, TSTDupContentCache, TSTHiddenRowsColumnsCache, TSTLayout, TSTLayoutDynamicResizeInfo, TSTMergeRangeSortedSet, TSTRWRetainedPointerKeyDictionary, TSTStrokeDefaultVendor, TSTStrokeWidthCache, TSTTableInfo, TSTTableModel, TSTWPColumnCache, TSTWidthHeightCache, TSUColor, TSUWidthLimitedQueue;
@protocol OS_dispatch_group, TSTLayoutDynamicCellFillProtocol, TSTLayoutDynamicColumnMoveProtocol, TSTLayoutDynamicContentProtocol, TSTLayoutDynamicRowMoveProtocol;

__attribute__((visibility("hidden")))
@interface TSTMasterLayout : NSObject <TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding>
{
    TSKChangeNotifier *mChangeNotifier;
    int mReferenceCount;
    TSTTableInfo *mTableInfo;
    TSTWPColumnCache *mCellIDToWPColumnCache;
    TSTDupContentCache *mDupContentCache;
    TSTWPColumnCache *mTempWPColumnCache;
    TSTWidthHeightCache *mWidthHeightCache;
    TSTHiddenRowsColumnsCache *mHiddenRowsColumnsCache;
    NSMutableArray *mChangeDescriptors;
    NSObject<OS_dispatch_group> *mLayoutInFlight;
    TSUWidthLimitedQueue *mLayoutQueue;
    unsigned int mMaxConcurrentTasks;
    unsigned int mNumCellsPerTask;
    _Bool mHeaderColumnsFrozen;
    _Bool mHeaderRowsFrozen;
    _Bool mHeaderColumnsRepeat;
    _Bool mHeaderRowsRepeat;
    _Bool mTableNameEnabled;
    struct CGRect mTableNameBounds;
    double mCachedTableNameHeight;
    unsigned short mCachedNumberOfHeaderColumns;
    unsigned long long mCachedMaxNumberOfColumns;
    unsigned short mCachedNumberOfHeaderRows;
    unsigned short mCachedNumberOfFooterRows;
    unsigned long long mCachedMaxNumberOfRows;
    TSTStrokeDefaultVendor *mStrokesDefaultVendor;
    NSPointerArray *mTopRowStrokes;
    NSPointerArray *mBottomRowStrokes;
    NSPointerArray *mLeftColumnStrokes;
    NSPointerArray *mRightColumnStrokes;
    TSTConcurrentMutableIndexSet *mSpillStrokeColumns;
    TSTCellRegion *mCellRegionForClearedMergeStrokes;
    struct _opaque_pthread_rwlock_t mStrokesRWLock;
    TSTStrokeWidthCache *mColumnToStrokeWidthCache;
    TSTStrokeWidthCache *mRowToStrokeHeightCache;
    TSTRWRetainedPointerKeyDictionary *mParaStyleToHeightCache;
    NSLock *mLock;
    _Bool mBandedFillIsValid;
    _Bool mUseBandedFill;
    TSDFill *mBandedFillObject;
    int mTableEnvironment;
    int mTableRowsBehavior;
    _Bool mTableDefaultFontHeightsAreValid;
    double mTableDefaultFontHeightForArea[5];
    _Bool mInDynamicLayoutMode;
    NSMutableSet *mDynamicLayouts;
    double mDynamicAddOrRemoveColumnElementSize;
    double mDynamicAddOrRemoveRowElementSize;
    _Bool mDynamicBandedFill;
    _Bool mDynamicBandedFillSetting;
    int mDynamicColumnAdjustment;
    id <TSTLayoutDynamicColumnMoveProtocol> mDynamicColumnMoveDelegate;
    double mDynamicColumnTabSize;
    id <TSTLayoutDynamicContentProtocol> mDynamicContentDelegate;
    TSUColor *mDynamicFontColor;
    struct TSUColumnRowRect mDynamicFontColorCellRange;
    struct TSUColumnRowRect mDynamicHidingRowsCols;
    long long mDynamicHidingRowsColsDirection;
    struct TSUColumnRowRect mDynamicHidingContent;
    struct TSUColumnRowRect mDynamicHidingText;
    TSDInfoGeometry *mDynamicInfoGeometry;
    _Bool mDynamicRepResize;
    _Bool mDynamicRepressFrozenHeaderRows;
    _Bool mDynamicRepressFrozenHeaderColumns;
    _Bool mDynamicResizingColumns;
    struct TSUColumnRowRect mDynamicResizingColumnRange;
    double mDynamicResizingColumnAdjustment;
    _Bool mDynamicResizingRows;
    struct TSUColumnRowRect mDynamicResizingRowRange;
    double mDynamicResizingRowAdjustment;
    struct TSUColumnRowRect mDynamicRevealingRowsCols;
    long long mDynamicRevealingRowsColsDirection;
    int mDynamicRowAdjustment;
    id <TSTLayoutDynamicRowMoveProtocol> mDynamicRowMoveDelegate;
    double mDynamicRowTabSize;
    TSDLayoutGeometry *mDynamicSavedLayoutGeometry;
    TSTCellSelection *mDynamicSelection;
    double mDynamicWidthResize;
    double mDynamicHeightResize;
    double mDynamicTableNameResize;
    TSTLayoutDynamicResizeInfo *mDynamicResizeInfo;
    CDStruct_0441cfb5 mDynamicSuppressingConditionalStylesCellID;
    id <TSTLayoutDynamicCellFillProtocol> mDynamicCellFillDelegate;
    _Bool mEmptyFilteredTable;
    TSTMergeRangeSortedSet *mMergeRanges;
    _Bool mProcessHiddenRowsForExport;
    struct CGSize mMaximumPartitionSize;
}

+ (double)effectiveTableNameHeightForModel:(id)arg1;
+ (struct CGSize)tableNameTextSize:(id)arg1;
+ (id)tableNameTextEngine:(id)arg1;
@property(retain, nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=mChangeNotifier;
@property(nonatomic) struct CGSize maximumPartitionSize; // @synthesize maximumPartitionSize=mMaximumPartitionSize;
@property(nonatomic) _Bool processHiddenRowsForExport; // @synthesize processHiddenRowsForExport=mProcessHiddenRowsForExport;
@property(retain, nonatomic) TSTMergeRangeSortedSet *mergeRanges; // @synthesize mergeRanges=mMergeRanges;
@property(readonly, nonatomic) NSMutableArray *changeDescriptors; // @synthesize changeDescriptors=mChangeDescriptors;
@property(readonly, nonatomic) CDStruct_0441cfb5 dynamicSuppressingConditionalStylesCellID; // @synthesize dynamicSuppressingConditionalStylesCellID=mDynamicSuppressingConditionalStylesCellID;
@property(readonly, nonatomic) double dynamicTableNameResize; // @synthesize dynamicTableNameResize=mDynamicTableNameResize;
@property(readonly, nonatomic) TSTCellSelection *dynamicSelection; // @synthesize dynamicSelection=mDynamicSelection;
@property(copy, nonatomic) TSDLayoutGeometry *dynamicSavedLayoutGeometry; // @synthesize dynamicSavedLayoutGeometry=mDynamicSavedLayoutGeometry;
@property(readonly, nonatomic) double dynamicRowTabSize; // @synthesize dynamicRowTabSize=mDynamicRowTabSize;
@property(readonly, nonatomic) int dynamicRowAdjustment; // @synthesize dynamicRowAdjustment=mDynamicRowAdjustment;
@property(readonly, nonatomic) struct TSUColumnRowRect dynamicResizingRowRange; // @synthesize dynamicResizingRowRange=mDynamicResizingRowRange;
@property(readonly, nonatomic) double dynamicResizingRowAdjustment; // @synthesize dynamicResizingRowAdjustment=mDynamicResizingRowAdjustment;
@property(readonly, nonatomic) _Bool dynamicResizingRows; // @synthesize dynamicResizingRows=mDynamicResizingRows;
@property(readonly, nonatomic) struct TSUColumnRowRect dynamicResizingColumnRange; // @synthesize dynamicResizingColumnRange=mDynamicResizingColumnRange;
@property(readonly, nonatomic) double dynamicResizingColumnAdjustment; // @synthesize dynamicResizingColumnAdjustment=mDynamicResizingColumnAdjustment;
@property(readonly, nonatomic) _Bool dynamicResizingColumns; // @synthesize dynamicResizingColumns=mDynamicResizingColumns;
@property(nonatomic) double dynamicWidthResize; // @synthesize dynamicWidthResize=mDynamicWidthResize;
@property(nonatomic) double dynamicHeightResize; // @synthesize dynamicHeightResize=mDynamicHeightResize;
@property(readonly, nonatomic) TSDInfoGeometry *dynamicInfoGeometry; // @synthesize dynamicInfoGeometry=mDynamicInfoGeometry;
@property(nonatomic) _Bool dynamicRepResize; // @synthesize dynamicRepResize=mDynamicRepResize;
@property(readonly, nonatomic) struct TSUColumnRowRect dynamicFontColorCellRange; // @synthesize dynamicFontColorCellRange=mDynamicFontColorCellRange;
@property(readonly, nonatomic) TSUColor *dynamicFontColor; // @synthesize dynamicFontColor=mDynamicFontColor;
@property(readonly, nonatomic) double dynamicColumnTabSize; // @synthesize dynamicColumnTabSize=mDynamicColumnTabSize;
@property(readonly, nonatomic) int dynamicColumnAdjustment; // @synthesize dynamicColumnAdjustment=mDynamicColumnAdjustment;
@property(readonly, nonatomic) _Bool dynamicBandedFillSetting; // @synthesize dynamicBandedFillSetting=mDynamicBandedFillSetting;
@property(readonly, nonatomic) _Bool dynamicBandedFill; // @synthesize dynamicBandedFill=mDynamicBandedFill;
@property(readonly, nonatomic) double dynamicAddOrRemoveRowElementSize; // @synthesize dynamicAddOrRemoveRowElementSize=mDynamicAddOrRemoveRowElementSize;
@property(readonly, nonatomic) double dynamicAddOrRemoveColumnElementSize; // @synthesize dynamicAddOrRemoveColumnElementSize=mDynamicAddOrRemoveColumnElementSize;
@property(readonly, nonatomic) NSMutableSet *dynamicLayouts; // @synthesize dynamicLayouts=mDynamicLayouts;
@property(readonly, nonatomic) _Bool inDynamicLayoutMode; // @synthesize inDynamicLayoutMode=mInDynamicLayoutMode;
@property(nonatomic) unsigned int numCellsPerTask; // @synthesize numCellsPerTask=mNumCellsPerTask;
@property(nonatomic) unsigned int maxConcurrentTasks; // @synthesize maxConcurrentTasks=mMaxConcurrentTasks;
@property(readonly, nonatomic) int tableRowsBehavior; // @synthesize tableRowsBehavior=mTableRowsBehavior;
@property(nonatomic) int tableEnvironment; // @synthesize tableEnvironment=mTableEnvironment;
@property(readonly, nonatomic) TSDFill *bandedFillObject; // @synthesize bandedFillObject=mBandedFillObject;
@property(readonly, nonatomic) TSTHiddenRowsColumnsCache *hiddenRowsColumnsCache; // @synthesize hiddenRowsColumnsCache=mHiddenRowsColumnsCache;
@property(readonly, nonatomic) TSTWidthHeightCache *widthHeightCache; // @synthesize widthHeightCache=mWidthHeightCache;
@property(readonly, nonatomic) TSTWPColumnCache *tempWPColumnCache; // @synthesize tempWPColumnCache=mTempWPColumnCache;
@property(readonly, nonatomic) TSTDupContentCache *dupContentCache; // @synthesize dupContentCache=mDupContentCache;
@property(readonly, nonatomic) TSTWPColumnCache *cellIDToWPColumnCache; // @synthesize cellIDToWPColumnCache=mCellIDToWPColumnCache;
@property(readonly, nonatomic) TSTStrokeDefaultVendor *strokesDefaultVendor; // @synthesize strokesDefaultVendor=mStrokesDefaultVendor;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
- (double)fontHeightOfParagraphStyle:(id)arg1;
- (struct UIEdgeInsets)defaultPaddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)paddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)edgeInsetsFromPadding:(id)arg1;
- (id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (id)newTextEngineForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)waitForLayoutToComplete;
- (void)processLayoutTask:(id)arg1;
- (void)measureTextForLayoutState:(id)arg1;
- (void)queueCellForValidation:(struct TSUColumnRowRect)arg1 cell:(id)arg2 modelMergeRange:(struct TSUColumnRowRect)arg3 wrap:(_Bool)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 prop:(_Bool)arg7 layoutCacheFlags:(int)arg8 layoutTask:(id)arg9;
- (id)validateCellForDrawing:(CDStruct_0441cfb5)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(_Bool)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9;
- (void)validateFittingWidthsForRegion:(id)arg1;
- (void)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2;
- (id)p_validationFittingForChangeDescriptorType:(int)arg1 regionFromChangeDescriptor:(id)arg2 currentRegionToValidate:(id)arg3;
- (id)p_validationFittingCellRegionForRangeMergeUnmerge:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForRowsInserted:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForRowsDeleted:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForColumnsVisibility:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForColumnsInserted:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForColumnsDeleted:(id)arg1 currentRegionToValidate:(id)arg2;
- (void)p_validateFittingInfoForEmptyMergeRange:(struct TSUColumnRowRect)arg1;
- (CDStruct_0441cfb5)p_validateFittingInfoForEmptyCellsBetween:(CDStruct_0441cfb5)arg1 andCellID:(CDStruct_0441cfb5)arg2 inRange:(struct TSUColumnRowRect)arg3 widthHeightCollection:(id)arg4;
- (void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(CDStruct_0441cfb5)arg1 andEndCellID:(CDStruct_0441cfb5)arg2 widthHeightCollection:(id)arg3;
- (void)validateFittingInfoWithCellRange:(struct TSUColumnRowRect)arg1;
- (void)validateFittingInfoWithCellRangeWorker:(struct TSUColumnRowRect)arg1;
- (void)validateFittingInfoForCell:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 mergeRange:(struct TSUColumnRowRect)arg3 setFitting:(_Bool)arg4 layoutTask:(id)arg5 widthHeightCollection:(id)arg6;
- (void)validateRowVisibility:(id)arg1;
- (void)updateWHCForMergeRanges;
- (void)validateChangeDescriptorQueue;
- (void)validateMasterLayoutForChangeDescriptors:(id)arg1;
- (void)validate;
- (void)addChangeDescriptor:(id)arg1;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(struct TSUColumnRowRect)arg2 andStrokeRange:(struct TSUColumnRowRect)arg3;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(struct TSUColumnRowRect)arg2;
@property(readonly, nonatomic) _Bool isGrouped;
- (void)validateDynamicResizeInfo;
- (void)invalidateDynamicResizeInfo;
- (void)updateDynamicResizeInfo:(id)arg1;
- (void)captureDynamicResizeInfo;
- (_Bool)isDynamicallyMovingColumns;
@property(readonly, nonatomic) id <TSTLayoutDynamicColumnMoveProtocol> dynamicColumnMoveDelegate; // @synthesize dynamicColumnMoveDelegate=mDynamicColumnMoveDelegate;
- (_Bool)isDynamicallyMovingRows;
@property(readonly, nonatomic) id <TSTLayoutDynamicRowMoveProtocol> dynamicRowMoveDelegate; // @synthesize dynamicRowMoveDelegate=mDynamicRowMoveDelegate;
- (_Bool)isDynamicallyChangingFontColorOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyChangingContent;
@property(readonly, nonatomic) id <TSTLayoutDynamicContentProtocol> dynamicContentDelegate; // @synthesize dynamicContentDelegate=mDynamicContentDelegate;
- (_Bool)isDynamicallyChangingCellFill;
@property(readonly, nonatomic) id <TSTLayoutDynamicCellFillProtocol> dynamicCellFillDelegate;
- (_Bool)isDynamicallyRepressingFrozenHeaderColumns;
- (_Bool)isDynamicallyRepressingFrozenHeaderRows;
- (_Bool)isDynamicallySettingBandedFill;
- (_Bool)isDynamicallyRowTabResizing;
- (_Bool)isDynamicallyColumnTabResizing;
- (_Bool)isDynamicallyChangingSelection;
- (_Bool)isDynamicallyChangingRowOrColumnCount;
- (_Bool)isDynamicallyChangingColumnCount;
- (_Bool)isDynamicallyChangingRowCount;
- (_Bool)isDynamicallyResizingTableName;
- (void)updateDynamicTableNameSize:(double)arg1;
- (_Bool)isDynamicallyRevealingRowsCols:(long long)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyRevealingRowsCols;
- (_Bool)isDynamicallyChangingInfoGeometry;
- (_Bool)isDynamicallyHidingTextOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingContentOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingRowsColsCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingRowsCols:(long long)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyHidingRowsCols;
@property(readonly, nonatomic) TSTLayout *dynamicLayout;
- (_Bool)containsAnyContentInRange:(struct TSUColumnRowRect)arg1;
- (unsigned short)firstEmptyBodyRow;
- (struct TSUColumnRowRect)expandCellRangeToVisibleNeighbors:(struct TSUColumnRowRect)arg1;
@property(readonly, nonatomic) NSIndexSet *hiddenColumnIndices;
@property(readonly, nonatomic) NSIndexSet *hiddenRowIndices;
@property(readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property(readonly, nonatomic) NSIndexSet *visibleRowIndices;
- (unsigned char)visibleColumnAfterAndIncludingColumn:(unsigned char)arg1;
- (unsigned char)visibleColumnAfterColumn:(unsigned char)arg1;
- (unsigned char)visibleColumnBeforeAndIncludingColumn:(unsigned char)arg1;
- (unsigned char)visibleColumnBeforeColumn:(unsigned char)arg1;
- (unsigned short)nonUserHiddenRowAfterAndIncludingRow:(unsigned short)arg1;
- (unsigned short)visibleRowAfterAndIncludingRow:(unsigned short)arg1;
- (unsigned short)visibleRowAfterRow:(unsigned short)arg1;
- (unsigned short)visibleRowBeforeAndIncludingRow:(unsigned short)arg1;
- (unsigned short)visibleRowBeforeRow:(unsigned short)arg1;
- (_Bool)anyColumnsHiddenInCellRange:(struct TSUColumnRowRect)arg1;
- (_Bool)anyRowsUserHiddenInCellRange:(struct TSUColumnRowRect)arg1;
- (_Bool)anyRowsHiddenInCellRange:(struct TSUColumnRowRect)arg1;
- (_Bool)isEntireCellRangeHidden:(struct TSUColumnRowRect)arg1;
- (_Bool)isColumnHidden:(unsigned char)arg1;
- (_Bool)isRowUserHidden:(unsigned short)arg1;
- (_Bool)isRowHidden:(unsigned short)arg1;
- (_Bool)isDynamicallyResizingCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyResizing:(long long)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyResizing:(long long)arg1;
- (id)layoutCellRegionForModelCellRegion:(id)arg1;
- (CDStruct_0441cfb5)layoutCellIDForModelCellID:(CDStruct_0441cfb5)arg1;
- (unsigned char)layoutColumnForModelColumn:(unsigned char)arg1;
- (unsigned short)layoutRowForModelRow:(unsigned short)arg1;
- (id)modelCellRegionForLayoutCellRegion:(id)arg1;
- (CDStruct_0441cfb5)modelCellIDForLayoutCellID:(CDStruct_0441cfb5)arg1;
- (unsigned char)modelColumnForLayoutColumn:(unsigned char)arg1;
- (unsigned short)modelRowForLayoutRow:(unsigned short)arg1;
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)validateDefaultFontHeights;
- (void)invalidateDefaultFontHeights;
- (void)validateTableRowsBehavior;
- (void)validateBandedFill;
- (void)invalidateBandedFill;
- (_Bool)shouldRowUseBandedFill:(unsigned short)arg1;
@property(readonly, nonatomic) _Bool useBandedFill;
- (void)p_validateStrokesForRegion:(id)arg1;
- (void)validateStrokesForChangeDescriptors:(id)arg1;
- (void)p_clearStrokesForMergesInCellRegion:(id)arg1;
- (void)p_invalidateClearedStrokesForCellRegion:(id)arg1;
- (void)enumerateMergedStrokesAndCapsForGridRow:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesAndCapsForGridColumn:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesForGridRow:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesForGridColumn:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)clearDynamicStrokesForCellRange:(struct TSUColumnRowRect)arg1;
- (void)strokesForCellID:(CDStruct_0441cfb5)arg1 top:(id *)arg2 left:(id *)arg3 bottom:(id *)arg4 right:(id *)arg5;
- (void)setDynamicCellBorder:(id)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 atColumnIndex:(unsigned int)arg2;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 beginColumn:(unsigned int)arg2 endColumn:(unsigned int)arg3;
- (id)mergedStrokesForGridRow:(unsigned int)arg1;
- (id)p_strokesForGridRow:(unsigned int)arg1 isTop:(_Bool)arg2 takeStrokeWriteLock:(_Bool)arg3;
- (_Bool)adjustGridRowForVisibility:(unsigned int *)arg1 isTop:(_Bool)arg2;
- (void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridRow:(unsigned int)arg3 isTop:(_Bool)arg4 beginColumn:(unsigned int)arg5 endColumn:(unsigned int)arg6;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 atRowIndex:(unsigned int)arg2;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 beginRow:(unsigned int)arg2 endRow:(unsigned int)arg3;
- (id)mergedStrokesForGridColumn:(unsigned int)arg1;
- (id)p_strokesForGridColumn:(unsigned int)arg1 isLeft:(_Bool)arg2 takeStrokeWriteLock:(_Bool)arg3;
- (_Bool)adjustGridColumnForVisibility:(unsigned int *)arg1 isLeft:(_Bool)arg2;
- (void)setClearedStrokeForGridRow:(unsigned int)arg1 beginColumn:(unsigned int)arg2 endColumn:(unsigned int)arg3;
- (void)setClearedStrokeForGridColumn:(unsigned int)arg1 beginRow:(unsigned int)arg2 endRow:(unsigned int)arg3;
- (void)setStrokeSpillForRightGridColumn:(unsigned int)arg1 leftGridColumn:(unsigned int)arg2 inRow:(unsigned int)arg3;
- (void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridColumn:(unsigned int)arg3 isLeft:(_Bool)arg4 beginRow:(unsigned int)arg5 endRow:(unsigned int)arg6;
- (void)validateStrokesArrays;
- (void)invalidateStrokeSpills;
- (void)invalidateStrokeDefaults;
- (id)expandCellRegionToCoverMergedCells:(id)arg1;
- (struct TSUColumnRowRect)expandCellRangeToCoverMergedCells:(struct TSUColumnRowRect)arg1;
- (id)mergeRangesForCellRegion:(id)arg1;
- (id)mergeRangesForCellRange:(struct TSUColumnRowRect)arg1;
- (id)allMergeRanges;
- (id)mergeRangesProppingRowHeightsInRegion:(id)arg1;
@property(readonly, nonatomic) unsigned short numberOfHeaderColumns;
@property(readonly, nonatomic) unsigned short numberOfFooterRows;
@property(readonly, nonatomic) unsigned short numberOfHeaderRows;
@property(readonly, nonatomic) unsigned short numberOfColumns;
@property(readonly, nonatomic) unsigned short numberOfRows;
- (unsigned long long)tableAreaForCellID:(CDStruct_0441cfb5)arg1;
- (void)invalidateTableNameHeight;
- (double)calculatedTableNameHeightIncludingDynamicResize:(_Bool)arg1;
- (double)calculatedTableNameHeight;
- (double)tableNameHeight;
- (struct CGSize)tableNameTextSize;
- (id)tableNameTextEngine;
- (void)clearModelHeightWidthCacheForCellRange:(struct TSUColumnRowRect)arg1;
- (void)resetModelHeightWidthCache;
- (void)validateLayoutHint:(id)arg1;
- (_Bool)hintIsValid:(id)arg1;
- (id)newLayoutHint;
- (id)customStrokeProvider;
- (id)tableStrokeProvider;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
@property(readonly, nonatomic) _Bool emptyFilteredTable; // @synthesize emptyFilteredTable=mEmptyFilteredTable;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

