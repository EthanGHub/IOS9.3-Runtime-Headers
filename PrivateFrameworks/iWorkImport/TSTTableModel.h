//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

#import <iWorkImport/TSDMixing-Protocol.h>
#import <iWorkImport/TSTCustomStrokeProviding-Protocol.h>
#import <iWorkImport/TSTTableHiddenRowColumnProviding-Protocol.h>
#import <iWorkImport/TSTTableInternalGeometryProviding-Protocol.h>
#import <iWorkImport/TSTTableMergeRangeProviding-Protocol.h>
#import <iWorkImport/TSTTableStrokeProviding-Protocol.h>

@class NSArray, NSString, TSCECalculationEngine, TSCECellCoordinateVector, TSCEOwnerFormulaMap, TSDFill, TSDStroke, TSKDocumentRoot, TSTCell, TSTCellDictionary, TSTCellStyle, TSTColumnRowUIDMap, TSTConditionalStyleFormulaOwner, TSTHiddenStateFormulaOwner, TSTHiddenStateIndexSet, TSTImportWarningSetByCoordinateMap, TSTMergeOwner, TSTSortRuleReferenceTracker, TSTStrokeSidecar, TSTTableDataStore, TSTTableFilterSet, TSTTableSortOrder, TSTTableStyle, TSTTableStylePreset, TSWPParagraphStyle, TSWPShapeStyle, TSWPStorage;

__attribute__((visibility("hidden")))
@interface TSTTableModel : TSPObject <TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableStrokeProviding, TSTCustomStrokeProviding, TSTTableMergeRangeProviding, TSDMixing>
{
    TSTTableDataStore *mDataStore;
    struct __CFUUID *mTableID;
    struct __CFUUID *mFromTableID;
    _Bool mWasCut;
    unsigned short mNumberOfRows;
    unsigned short mNumberOfColumns;
    unsigned short mNumberOfHeaderRows;
    unsigned short mNumberOfHeaderColumns;
    unsigned short mNumberOfFooterRows;
    _Bool mHeaderRowsFrozen;
    _Bool mHeaderColumnsFrozen;
    unsigned short mNumberOfHiddenRows;
    unsigned short mNumberOfHiddenColumns;
    unsigned short mNumberOfUserHiddenRows;
    unsigned short mNumberOfUserHiddenColumns;
    unsigned short mNumberOfFilteredRows;
    double mDefaultRowHeight;
    double mDefaultColumnWidth;
    NSString *mTableName;
    _Bool mTableNameEnabled;
    double mTableNameHeight;
    _Bool mTableNameBorderEnabled;
    _Bool mRepeatingHeaderRowsEnabled;
    _Bool mRepeatingHeaderColumnsEnabled;
    TSTHiddenStateFormulaOwner *mHiddenStateFormulaOwnerForRows;
    TSTHiddenStateFormulaOwner *mHiddenStateFormulaOwnerForColumns;
    TSTSortRuleReferenceTracker *mSortRuleReferenceTracker;
    unsigned long long mPresetIDForUpgrade;
    TSTTableStylePreset *mTableStylePreset;
    _Bool mStyleApplyClearsAll;
    struct {
        TSTTableStyle *tableStyle;
        TSTCellStyle *bodyCellStyle;
        TSTCellStyle *headerRowCellStyle;
        TSTCellStyle *headerColumnCellStyle;
        TSTCellStyle *footerRowCellStyle;
        TSWPParagraphStyle *bodyTextStyle;
        TSWPParagraphStyle *headerRowTextStyle;
        TSWPParagraphStyle *headerColumnTextStyle;
        TSWPParagraphStyle *footerRowTextStyle;
        TSWPParagraphStyle *tableNameStyle;
        TSWPShapeStyle *tableNameShapeStyle;
    } mStyles;
    struct _TSTDefaultCellBlock mDefaultCells;
    TSCEOwnerFormulaMap *mFormulasForUndo;
    TSTImportWarningSetByCoordinateMap *mWarningSetsForUndo;
    TSCECalculationEngine *mCalcEngine;
    TSTCellDictionary *mCellsPendingWrite;
    struct _opaque_pthread_mutex_t mCellsToInvalidateAfterRecalcLock;
    TSCECellCoordinateVector *mCellsToInvalidateAfterRecalc;
    TSCECellCoordinateVector *mCellsToInvalidateNonoverflowingAfterRecalc;
    TSTConditionalStyleFormulaOwner *mConditionalStyleFormulaOwner;
    TSTMergeOwner *mMergeOwner;
    TSWPStorage *mDeprecatedProvider;
    _Bool mWasUnarchivedFromAProvidedTable;
    TSTTableFilterSet *mFilterSet;
    TSTTableSortOrder *mSortOrder;
    TSTColumnRowUIDMap *mColumnRowUIDMap;
    TSTHiddenStateIndexSet *mHiddenRows;
    TSTHiddenStateIndexSet *mUserHiddenRows;
    TSTHiddenStateIndexSet *mHiddenColumns;
    TSTStrokeSidecar *mStrokeSidecar;
}

+ (struct __CFDictionary *)newIDMapForPastedTablesInDrawables:(id)arg1 calculationEngine:(id)arg2;
+ (struct TSUColumnRowRect)cellRangeForTableArea:(unsigned long long)arg1 givenTableSize:(CDStruct_d65e47c4)arg2 numberOfHeaderRows:(unsigned short)arg3 numberOfFooterRows:(unsigned short)arg4 numberOfHeaderColumns:(unsigned short)arg5;
+ (unsigned long long)tableAreaForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalRows:(unsigned short)arg5;
+ (void)chooseUniqueNameForTables:(id)arg1 inContainer:(id)arg2 forPaste:(_Bool)arg3;
+ (_Bool)needsObjectUUID;
+ (void)load;
@property(readonly, retain, nonatomic) TSTStrokeSidecar *strokeSidecar; // @synthesize strokeSidecar=mStrokeSidecar;
@property(readonly, nonatomic) TSTMergeOwner *mergeOwner; // @synthesize mergeOwner=mMergeOwner;
@property(retain, nonatomic) TSTConditionalStyleFormulaOwner *conditionalStyleFormulaOwner; // @synthesize conditionalStyleFormulaOwner=mConditionalStyleFormulaOwner;
@property(retain, nonatomic) TSTImportWarningSetByCoordinateMap *warningSetsForUndo; // @synthesize warningSetsForUndo=mWarningSetsForUndo;
@property(retain, nonatomic) TSCEOwnerFormulaMap *formulasForUndo; // @synthesize formulasForUndo=mFormulasForUndo;
@property(nonatomic) TSCECalculationEngine *calcEngine; // @synthesize calcEngine=mCalcEngine;
@property(readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateNonoverflowingAfterRecalc; // @synthesize cellsToInvalidateNonoverflowingAfterRecalc=mCellsToInvalidateNonoverflowingAfterRecalc;
@property(readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateAfterRecalc; // @synthesize cellsToInvalidateAfterRecalc=mCellsToInvalidateAfterRecalc;
@property(readonly, nonatomic) TSTCellDictionary *cellsPendingWrite; // @synthesize cellsPendingWrite=mCellsPendingWrite;
@property(nonatomic) _Bool wasUnarchivedFromAProvidedTable; // @synthesize wasUnarchivedFromAProvidedTable=mWasUnarchivedFromAProvidedTable;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenColumns; // @synthesize numberOfUserHiddenColumns=mNumberOfUserHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenRows; // @synthesize numberOfUserHiddenRows=mNumberOfUserHiddenRows;
@property(readonly, nonatomic) unsigned short numberOfHiddenColumns; // @synthesize numberOfHiddenColumns=mNumberOfHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfHiddenRows; // @synthesize numberOfHiddenRows=mNumberOfHiddenRows;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (id)cellRegionForUIDRange:(const struct TSTCellUIDRange *)arg1;
- (struct TSTCellUIDRange)cellUIDRangeForCellRange:(struct TSUColumnRowRect)arg1;
- (struct TSUColumnRowRect)cellRangeForUIDRange:(const struct TSTCellUIDRange *)arg1;
- (id)cellRegionFromCellUIDList:(id)arg1;
- (id)cellUIDListFromCellRegion:(id)arg1;
- (id)mutableIndexesForUIDSet:(id)arg1 asRows:(_Bool)arg2 notFoundUIDs:(id)arg3;
- (id)mutableIndexesForUIDSet:(id)arg1 asRows:(_Bool)arg2;
- (id)UIDSetForIndexes:(id)arg1 asRows:(_Bool)arg2;
- (vector_dadc1b26)columnUIDs;
- (vector_dadc1b26)columnUIDsForColumnRange:(struct _NSRange)arg1;
- (id)mutableColumnIndexesForUIDs:(const vector_dadc1b26 *)arg1;
- (id)columnIndexesForUIDs:(const vector_dadc1b26 *)arg1;
- (vector_dadc1b26)columnUIDsForColumnIndexes:(id)arg1;
- (unsigned char)columnIndexForColumnUID:(const UUIDData_5fbc143e *)arg1;
- (UUIDData_5fbc143e)columnUIDForColumnIndex:(unsigned char)arg1;
- (vector_dadc1b26)rowUIDs;
- (vector_dadc1b26)rowUIDsForRowRange:(struct _NSRange)arg1;
- (id)mutableRowIndexesForUIDs:(const vector_dadc1b26 *)arg1;
- (id)rowIndexesForUIDs:(const vector_dadc1b26 *)arg1;
- (vector_dadc1b26)rowUIDsForRowIndexes:(id)arg1;
- (unsigned short)rowIndexForRowUID:(const UUIDData_5fbc143e *)arg1;
- (UUIDData_5fbc143e)rowUIDForRowIndex:(unsigned short)arg1;
- (_Bool)writeCellIDsInCellUIDList:(id)arg1 toVector:(vector_40b16ab8 *)arg2;
- (id)prunedCellUIDListFromCellUIDList:(id)arg1 allowMergeFragment:(_Bool)arg2 addingPrunedIndicesToIndexSet:(id)arg3;
- (CDStruct_0441cfb5)cellIDForCellUID:(const struct TSTCellUID *)arg1;
- (struct TSTCellUID)cellUIDforCellID:(const CDStruct_0441cfb5 *)arg1;
- (id)allRichTextPayloadStorages;
- (void)upgradeFromPreUFF;
- (struct TSUColumnRowRect)minPopulatedCellRange;
- (void)validate;
- (void)private_validateMergeCellsPedantically;
- (void)validateStyles;
- (void)moveCalcEngineReferencesFromSourceTable:(struct __CFUUID *)arg1 sourceRange:(struct TSUColumnRowRect)arg2 sourceOffset:(CDStruct_1ef3fb1f)arg3;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)updateTableRowColumnStylesWithBlock:(CDUnknownBlockType)arg1;
- (void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2;
- (_Bool)cellWasModifiedInCurrentRecalcCycle:(CDStruct_0441cfb5)arg1;
- (_Bool)hasFormulas;
- (CDStruct_18e81ca1)referenceToHiddenStateFromColumn:(unsigned char)arg1 toColumn:(unsigned char)arg2;
- (CDStruct_18e81ca1)referenceToHiddenStateFromRow:(unsigned short)arg1 toRow:(unsigned short)arg2;
- (void)registerAllFormulasWithCalculationEngine:(id)arg1;
- (void)addPasteboardCustomFormatsToDocumentAndUpdateCellsInRegion:(id)arg1;
- (void)remapTableUIDsUsingTableIDHistoryWithCalcEngine:(id)arg1;
- (void)remapTableUIDsInFormulasWithMap:(const struct TSUUuidMap *)arg1 calcEngine:(id)arg2;
- (id)cellRegionWithConditionalStyleMatchingCell:(CDStruct_0441cfb5)arg1;
- (id)strokeLayerForBottomOfRow:(unsigned short)arg1;
- (id)strokeLayerForTopOfRow:(unsigned short)arg1;
- (id)strokeLayerForRightSideOfColumn:(unsigned char)arg1;
- (id)strokeLayerForLeftSideOfColumn:(unsigned char)arg1;
- (void)setStroke:(id)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3;
- (id)cellBorderAtCellID:(CDStruct_0441cfb5)arg1;
- (int)maxStrokeOrder;
- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalColumns:(unsigned short)arg5 totalRows:(unsigned short)arg6 tableArea:(unsigned long long)arg7 outTopStroke:(id *)arg8 outLeftStroke:(id *)arg9 outBottomStroke:(id *)arg10 outRightStroke:(id *)arg11;
- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 outTopStroke:(id *)arg2 outLeftStroke:(id *)arg3 outBottomStroke:(id *)arg4 outRightStroke:(id *)arg5;
@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property(readonly, nonatomic) TSDStroke *bodyRowStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDStroke *bodyRowStroke;
@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDStroke *defaultVerticalBorderStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStroke;
@property(readonly, nonatomic) TSDFill *footerRowsFill;
@property(readonly, nonatomic) TSDFill *headerRowsFill;
@property(readonly, nonatomic) TSDFill *headerColumnsFill;
@property(readonly, nonatomic) TSDFill *bodyFill;
@property(readonly, nonatomic) TSDFill *backgroundFill;
- (id)expandCellRegionToCoverMergedCells:(id)arg1;
- (struct TSUColumnRowRect)expandCellRangeToCoverMergedCells:(struct TSUColumnRowRect)arg1;
- (id)mergeRangesForCellRegion:(id)arg1;
- (id)grabAllMergeRanges;
- (id)allMergeRanges;
- (id)mergeRangesForCellRange:(struct TSUColumnRowRect)arg1;
- (id)regionForValueCellsInRange:(struct TSUColumnRowRect)arg1;
- (id)mergedGridIndicesForDirection:(long long)arg1;
- (_Bool)hasMergeRanges;
- (unsigned char)visibleColumnAfterAndIncludingColumn:(unsigned char)arg1;
- (unsigned char)visibleColumnAfterColumn:(unsigned char)arg1;
- (unsigned char)visibleColumnBeforeAndIncludingColumn:(unsigned char)arg1;
- (unsigned char)visibleColumnBeforeColumn:(unsigned char)arg1;
- (unsigned short)visibleRowAfterAndIncludingRow:(unsigned short)arg1;
- (unsigned short)visibleRowAfterRow:(unsigned short)arg1;
- (unsigned short)visibleRowBeforeAndIncludingRow:(unsigned short)arg1;
- (unsigned short)visibleRowBeforeRow:(unsigned short)arg1;
@property(readonly, nonatomic) unsigned short numberOfVisibleBodyColumns;
@property(readonly, nonatomic) unsigned short numberOfVisibleBodyRows;
- (void)setupHiddenStateIndexSets;
- (_Bool)isCellRangeHidden:(struct TSUColumnRowRect)arg1;
- (_Bool)anyRowsHiddenInCellRange:(struct TSUColumnRowRect)arg1 forAction:(unsigned char)arg2;
- (unsigned char)hidingActionForColumn:(unsigned char)arg1;
- (unsigned char)hidingActionForRow:(unsigned short)arg1;
- (id)visibleRowsInRowRange:(id)arg1;
- (id)userVisibleRowsInCellRange:(struct TSUColumnRowRect)arg1;
- (id)visibleRowsInCellRange:(struct TSUColumnRowRect)arg1;
- (id)userHiddenRowsInCellRange:(struct TSUColumnRowRect)arg1;
- (id)hiddenRowsInCellRange:(struct TSUColumnRowRect)arg1;
- (id)visibleColumnsInColumnRange:(id)arg1;
- (id)visibleColumnsInCellRange:(struct TSUColumnRowRect)arg1;
- (id)hiddenColumnsInCellRange:(struct TSUColumnRowRect)arg1;
- (_Bool)isColumnHidden:(unsigned char)arg1;
- (_Bool)isRowHidden:(unsigned short)arg1;
- (_Bool)isColumnHidden:(unsigned char)arg1 forAction:(unsigned char)arg2;
- (_Bool)isRowHidden:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (_Bool)anyColumnsHiddenInCellRange:(struct TSUColumnRowRect)arg1;
- (unsigned short)numberColumnsHiddenInCellRange:(struct TSUColumnRowRect)arg1;
- (_Bool)anyRowsHiddenInCellRange:(struct TSUColumnRowRect)arg1;
- (unsigned short)numberRowsHiddenInCellRange:(struct TSUColumnRowRect)arg1;
- (void)removeColumnsAtIndexes:(id)arg1;
- (void)removeRowsAtIndexes:(id)arg1;
- (void)removeColumnsAtIndex:(unsigned char)arg1 count:(unsigned short)arg2;
- (void)removeRowsAtIndex:(unsigned short)arg1 count:(unsigned short)arg2;
- (void)insertColumnsAtIndex:(unsigned char)arg1 count:(unsigned short)arg2 addBefore:(_Bool)arg3;
- (int)insertColumnsInRange:(struct _NSRange)arg1 uids:(const vector_dadc1b26 *)arg2 metadata:(id)arg3;
- (int)insertRowsInRange:(struct _NSRange)arg1 uids:(const vector_dadc1b26 *)arg2 metadata:(id)arg3 unsetFilterHidingAction:(_Bool)arg4;
- (int)insertRowsInRange:(struct _NSRange)arg1 uids:(const vector_dadc1b26 *)arg2 metadata:(id)arg3;
- (void)insertRowsAtIndex:(unsigned short)arg1 count:(unsigned short)arg2 addBefore:(_Bool)arg3;
- (struct TSUColumnRowRect)bottomCornerRange;
- (struct TSUColumnRowRect)topCornerRange;
- (struct TSUColumnRowRect)footerRowRange;
- (struct TSUColumnRowRect)actualHeaderColumnRange;
- (struct TSUColumnRowRect)headerColumnRange;
- (struct TSUColumnRowRect)headerRowRange;
- (struct TSUColumnRowRect)bodyRowRange;
- (struct TSUColumnRowRect)bodyColumnRange;
- (struct TSUColumnRowRect)bodyRange;
- (struct TSUColumnRowRect)range;
@property NSArray *rowHeights;
@property NSArray *columnWidths;
- (void)setWidth:(double)arg1 ofColumn:(unsigned char)arg2;
- (void)setHeight:(double)arg1 ofRow:(unsigned short)arg2;
- (id)rowNameForCellID:(CDStruct_0441cfb5)arg1 cellRangeContainingName:(struct TSUColumnRowRect *)arg2 restrictToBodyRange:(_Bool)arg3;
- (id)columnNameForCellID:(CDStruct_0441cfb5)arg1 cellRangeContainingName:(struct TSUColumnRowRect *)arg2 restrictToBodyRange:(_Bool)arg3;
- (id)defaultTextStyleForTableArea:(unsigned long long)arg1;
- (id)defaultCellStyleForTableArea:(unsigned long long)arg1;
- (_Bool)hasCommentStorageAtCellID:(CDStruct_0441cfb5)arg1;
- (void)p_fetchCellHoldingReadLock:(void *)arg1 returnCode:(void *)arg2;
- (id)cellMapForRegion:(id)arg1 uidBased:(_Bool)arg2;
- (_Bool)hasFormulaByID:(unsigned int)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (id)cellAtCellID:(CDStruct_0441cfb5)arg1;
- (void)p_performCommentStorageDOLC:(id)arg1;
- (unsigned long long)tableAreaForColumn:(unsigned char)arg1;
- (unsigned long long)tableAreaForRow:(unsigned short)arg1;
- (int)defaultCell:(id)arg1 forTableArea:(unsigned long long)arg2;
- (id)defaultCellForTableArea:(unsigned long long)arg1;
- (id)tableAreasForCellRange:(struct TSUColumnRowRect)arg1;
- (struct TSUColumnRowRect)cellRangeForTableArea:(unsigned long long)arg1;
- (unsigned long long)tableAreaForCellID:(CDStruct_0441cfb5)arg1;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2 needsNewName:(_Bool)arg3 avoidNames:(id)arg4;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2 needsNewName:(_Bool)arg3;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2;
- (id)unnamedTableString;
- (void)setStorageParentToInfo:(id)arg1;
- (id)bandedFillObject;
- (_Bool)useBandedFill;
@property(readonly, nonatomic) TSTCell *defaultHeaderColumnCell;
@property(readonly, nonatomic) TSTCell *defaultHeaderRowCell;
@property(readonly, nonatomic) TSTCell *defaultFooterRowCell;
@property(readonly, nonatomic) TSTCell *defaultBodyCell;
@property(nonatomic) _Bool wasCut;
- (void)clearFromTableID;
@property(readonly, nonatomic) struct __CFUUID *fromTableID;
@property(readonly, nonatomic) UUIDData_5fbc143e tableUID;
- (void)setTableID:(struct __CFUUID *)arg1;
@property(readonly, nonatomic) struct __CFUUID *tableID;
- (_Bool)canTranspose;
- (_Bool)hasFilterRulesInColumns:(id)arg1;
- (void)dirtyFilterState;
- (void)filterSetUpdated;
- (_Bool)hasActiveFilters;
- (void)setFilterSetType:(int)arg1;
- (void)enableFilterSet:(_Bool)arg1;
- (void)mutateFormulaFiltersUsingBlock:(CDUnknownBlockType)arg1;
- (void)setNeedsFilterFormulaRewriteForImport:(_Bool)arg1;
- (_Bool)needsFilterFormulaRewriteForImport;
- (id)duplicateFilterSetInUidForm;
- (id)duplicateFilterSet;
@property(copy, nonatomic) TSTTableFilterSet *filterSet;
@property(readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForColumns;
- (void)resetSortRuleReferenceTrackerForInsert;
@property(copy, nonatomic) TSTTableSortOrder *sortOrder;
@property(readonly, nonatomic) TSTSortRuleReferenceTracker *sortRuleReferenceTracker;
@property(readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForRows;
- (id)dataStore;
@property(readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property(readonly, nonatomic) int tableWritingDirection;
@property(readonly, nonatomic) _Bool hasAlternatingRows;
@property(readonly, nonatomic) _Bool hasTableBorder;
@property(retain, nonatomic) TSTColumnRowUIDMap *columnRowUIDMap;
- (void)setTableNameShapeStyle:(id)arg1;
@property(readonly, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
- (void)setTableNameStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *tableNameStyle;
- (void)setFooterRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
- (void)setHeaderColumnTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
- (void)setHeaderRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
- (void)setBodyTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *bodyTextStyle;
- (void)setFooterRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *footerRowCellStyle;
- (void)setHeaderColumnCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerColumnCellStyle;
- (void)setHeaderRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerRowCellStyle;
- (void)setBodyCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *bodyCellStyle;
- (void)setTableStyle:(id)arg1;
@property(readonly, nonatomic) TSTTableStyle *tableStyle;
@property(retain, nonatomic) TSTTableStylePreset *tableStylePreset;
@property(nonatomic) _Bool headerColumnsFrozen;
@property(nonatomic) _Bool headerRowsFrozen;
@property(nonatomic) unsigned short numberOfHeaderColumns;
@property(nonatomic) unsigned short numberOfFooterRows;
@property(nonatomic) unsigned short numberOfHeaderRows;
@property(nonatomic) unsigned short numberOfColumns;
@property(nonatomic) unsigned short numberOfRows;
@property(nonatomic) _Bool styleApplyClearsAll;
@property(nonatomic) _Bool repeatingHeaderColumnsEnabled;
@property(nonatomic) _Bool repeatingHeaderRowsEnabled;
@property(nonatomic) double tableNameHeight;
@property(nonatomic) _Bool tableNameBorderEnabled;
@property(nonatomic) _Bool tableNameEnabled;
@property(retain, nonatomic) NSString *tableName;
- (void)bakeFormulas;
- (void)setDrawableIsBeingCopied:(_Bool)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)upgradeDuringDocumentUpgradeIfNeeded;
- (void)dealloc;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
- (id)initWithContext:(id)arg1 fromSourceModel:(id)arg2 region:(id)arg3 tableInfo:(id)arg4 waitForCalcEngine:(_Bool)arg5;
- (id)initWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3 styles:(id)arg4 stylePreset:(id)arg5 tableInfo:(id)arg6;
- (void)setupDefaultCells;
- (id)newCell;
- (void)resetStyles:(id)arg1;
- (void)p_releaseExistingDefaultStyles;
- (void)setStylesheetForUpgradeToSingleStylesheet:(id)arg1;
- (id)init;
- (void)p_clearDataListEntriesInRange:(struct TSUColumnRowRect)arg1 ignoreSizeChecks:(_Bool)arg2;
- (void)rearrangeWithMapping:(id)arg1;
- (id)mappingForSortWithRules:(id)arg1 inRows:(id)arg2;
- (void)p_gatherReorganizeValuesForColumn:(unsigned char)arg1 inRows:(id)arg2 outValues:(struct TSTCellReorganizeValue *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

