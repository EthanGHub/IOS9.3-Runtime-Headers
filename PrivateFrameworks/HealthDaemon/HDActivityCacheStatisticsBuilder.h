//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class HKQuantity, NSNumber, NSString;
@protocol HDActivityCacheStatisticsBuilderSourceOrderDelegate;

@interface HDActivityCacheStatisticsBuilder : NSObject
{
    vector_e4bf223f _workouts;
    vector_81c32433 _standHourSamples;
    vector_6dc0ebed _activationLogSamples;
    HKQuantity *_lastActiveEnergyValue;
    HKQuantity *_lastDistanceWalkingValue;
    HKQuantity *_lastFlightsClimbedValue;
    NSNumber *_lastStepCountValue;
    NSNumber *_lastStandHourValue;
    NSNumber *_lastExerciseMinuteValue;
    vector_6dc0ebed _activeSourcesList;
    struct map<_HKDataTypeCode, std::__1::map<long long, std::__1::map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>>>>>, std::__1::less<_HKDataTypeCode>, std::__1::allocator<std::__1::pair<const _HKDataTypeCode, std::__1::map<long long, std::__1::map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>>>>>>>> _sourceTotalsByIntervalIndexByTypeCode;
    double _builderStartTime;
    double _builderEndTime;
    NSString *_loggingName;
    double _intervalDuration;
    id <HDActivityCacheStatisticsBuilderSourceOrderDelegate> _sourceOrderDelegate;
}

@property(nonatomic) __weak id <HDActivityCacheStatisticsBuilderSourceOrderDelegate> sourceOrderDelegate; // @synthesize sourceOrderDelegate=_sourceOrderDelegate;
@property(nonatomic) double intervalDuration; // @synthesize intervalDuration=_intervalDuration;
- (id).cxx_construct;
- (void).cxx_destruct;
- (double)_sumSamplesInSourceMap:(map_a99630af *)arg1 orderedSources:(vector_d87a6415)arg2 strictStartTime:(double)arg3 strictEndTime:(double)arg4;
- (double)_sumSamplesInSourceMap:(map_a99630af *)arg1 orderedSources:(vector_d87a6415)arg2;
- (void)_addSample:(struct HDActivityCacheStatisticsBuilderSample)arg1 toSourceMap:(map_a99630af *)arg2;
- (void)_addSamples:(const vector_e4bf223f *)arg1 toSourceMap:(map_a99630af *)arg2;
- (double)_maxTimestampInSourceMap:(const map_a99630af *)arg1;
- (double)_minTimestampInSourceMap:(const map_a99630af *)arg1;
- (_Bool)_sourceMapIsEmpty:(const map_a99630af *)arg1;
- (id)createStatisticsCollectionWithType:(id)arg1 intervalComponents:(id)arg2 calendar:(id)arg3;
- (vector_6dc0ebed)_activeSourceVectorFromActivationLogSamples:(const vector_e4bf223f *)arg1;
- (void)addSamples:(const vector_e4bf223f *)arg1 typeCode:(long long)arg2;
- (void)addSample:(struct HDActivityCacheStatisticsBuilderSample)arg1 typeCode:(long long)arg2;
- (void)addActivationLogSamples:(const vector_e4bf223f *)arg1;
- (void)addStandHourSamples:(const vector_81c32433 *)arg1;
- (void)addWorkouts:(const vector_e4bf223f *)arg1;
- (void)_resetAllCachedValues;
- (void)_clearCachedValueForTypeCode:(long long)arg1;
- (void)_loadActiveSourceList;
- (void)_clearActiveSources;
- (void)_logActiveSourcesList:(vector_6dc0ebed *)arg1;
- (id)_workoutIdentifiersStringForActiveSource:(struct HDActivityCacheActiveSource *)arg1;
- (id)_loggingPrefix;
- (long long)exerciseMinuteValue;
- (long long)standHourValue;
- (long long)stepCountValue;
- (id)flightsClimbedValue;
- (id)distanceWalkingValue;
- (id)activeEnergyValue;
- (vector_d87a6415)_sourceOrderForTypeCode:(long long)arg1;
- (id)init;
- (id)initWithTimePeriod:(id)arg1 loggingName:(id)arg2;

@end

