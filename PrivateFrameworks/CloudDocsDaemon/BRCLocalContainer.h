//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <CloudDocsDaemon/BRCContainer-Protocol.h>

@class BRCAccountSession, BRCDeadlineToken, BRCServerZone, BRCSyncBudgetThrottle, BRCSyncDownOperation, BRCSyncOperationThrottle, BRCSyncUpOperation, BRCThrottleBase, NSArray, NSDate, NSError, NSMutableDictionary, NSMutableIndexSet, NSMutableSet, NSNumber, NSString, NSURL, PQLConnection;
@protocol BRCLocalContainerDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface BRCLocalContainer : NSObject <BRCContainer>
{
    BRCAccountSession *_session;
    BRCServerZone *_serverZone;
    id <BRCLocalContainerDelegate> _delegate;
    NSNumber *_dbRowID;
    NSString *_containerID;
    NSString *_mangledID;
    PQLConnection *_db;
    unsigned int _state;
    _Bool _activated;
    int _notifyTokenForFramework;
    _Bool _isInitialCreation;
    BRCThrottleBase *_readerThrottle;
    // Error parsing type: AQ, name: _activeQueries
    // Error parsing type: AQ, name: _activeRecursiveQueries
    // Error parsing type: AQ, name: _activeAliasQueries
    unsigned long long _maxLostStamp;
    NSNumber *_deepScanStamp;
    long long _lostHeapKey;
    long long _syncUpRetryAfter;
    // Error parsing type: AI, name: _syncState
    BRCSyncUpOperation *_syncUpOperation;
    NSError *_lastSyncUpError;
    BRCSyncDownOperation *_syncDownOperation;
    id _syncDeadlineTokenResumer;
    NSError *_lastSyncDownError;
    BRCSyncOperationThrottle *_syncUpThrottle;
    BRCSyncBudgetThrottle *_syncUpBudget;
    BRCSyncOperationThrottle *_syncDownThrottle;
    BRCDeadlineToken *_syncDeadlineToken;
    NSMutableIndexSet *_appliedTombstoneRanks;
    long long _lastInsertedRank;
    NSDate *_lastSyncDownDate;
    NSString *_osNameRequiredToSync;
    NSMutableIndexSet *_pendingCoordinatedIOs;
    NSMutableSet *_pendingFileCoordinators;
    _Bool _shouldForceContainerForeground;
    NSMutableSet *_foregroundClients;
    NSString *_lastForegroundClientDescription;
    NSDate *_dateWhenLastForegroundClientLeft;
    NSObject<OS_dispatch_source> *_timerForGraceForegroundPeriod;
    NSObject<OS_dispatch_queue> *_foregroundStateQueue;
    NSObject<OS_dispatch_source> *_resetTimer;
    NSMutableSet *_XPCClientsUsingUbiquity;
    NSMutableDictionary *_syncDownBlockToPerformForBookmarkData;
    NSMutableDictionary *_onDiskBlockToPerformForItemID;
    NSMutableDictionary *_downloadedBlockToPerformForItemID;
    NSMutableDictionary *_syncDownBlockToPerformForItemID;
    _Bool _needsSave;
    NSNumber *_fileID;
    NSNumber *_generationID;
    unsigned long long _requestID;
    NSArray *_syncThrottles;
    NSMutableDictionary *_t_osNamesByItemIDBlockedForSyncUp;
    NSString *_t_syncBlockedUntilOSName;
}

@property(readonly, nonatomic) NSString *osNameRequiredToSync; // @synthesize osNameRequiredToSync=_osNameRequiredToSync;
@property(retain, nonatomic) BRCServerZone *serverZone; // @synthesize serverZone=_serverZone;
@property(readonly, nonatomic) BRCDeadlineToken *syncDeadlineToken; // @synthesize syncDeadlineToken=_syncDeadlineToken;
@property(retain, nonatomic) BRCAccountSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) NSMutableIndexSet *pendingCoordinatedIOs; // @synthesize pendingCoordinatedIOs=_pendingCoordinatedIOs;
@property(readonly, nonatomic) long long lastInsertedRank; // @synthesize lastInsertedRank=_lastInsertedRank;
@property(readonly, nonatomic) unsigned long long currentRequestID; // @synthesize currentRequestID=_requestID;
@property(readonly, nonatomic) NSNumber *generationID; // @synthesize generationID=_generationID;
@property(readonly, nonatomic) NSNumber *fileID; // @synthesize fileID=_fileID;
@property(readonly, nonatomic) NSString *mangledID; // @synthesize mangledID=_mangledID;
@property(retain, nonatomic) NSString *containerID; // @synthesize containerID=_containerID;
@property(retain, nonatomic) NSNumber *dbRowID; // @synthesize dbRowID=_dbRowID;
@property(readonly, nonatomic) unsigned int state; // @synthesize state=_state;
@property(nonatomic) _Bool needsSave; // @synthesize needsSave=_needsSave;
@property(readonly, nonatomic) PQLConnection *db; // @synthesize db=_db;
@property(retain, nonatomic) id <BRCLocalContainerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool activated; // @synthesize activated=_activated;
- (void).cxx_destruct;
- (void)setupOperationForTestsIfNeeded:(id)arg1 recordsToSave:(id)arg2;
@property(readonly, nonatomic) NSString *_t_syncBlockedUntilOSName; // @synthesize _t_syncBlockedUntilOSName;
@property(readonly, nonatomic) NSMutableDictionary *_t_osNamesByItemIDBlockedForSyncUp; // @synthesize _t_osNamesByItemIDBlockedForSyncUp;
- (void)_t_markBlockedUntilOSName:(id)arg1;
- (void)_t_removeAllItemIDsSyncUpBlocking;
- (void)_t_addItemID:(id)arg1 blockedForSyncUpUntilOSName:(id)arg2;
- (_Bool)dumpActivityToContext:(id)arg1 error:(id *)arg2;
- (_Bool)_dumpItemsToContext:(id)arg1 error:(id *)arg2;
- (_Bool)removeSyncDownForItemIDBlock:(id)arg1;
- (_Bool)removeItemIsDownloadedBlock:(id)arg1;
- (_Bool)removeItemOnDiskBlock:(id)arg1;
@property(readonly, nonatomic) _Bool hasHighPriorityWatchers;
- (void)performBlock:(CDUnknownBlockType)arg1 whenSyncDownCompletesLookingForItemID:(id)arg2;
- (void)_prepareForForegroundSyncDown;
- (void)performBlock:(CDUnknownBlockType)arg1 whenItemWithIDIsDownloaded:(id)arg2;
- (void)performBlock:(CDUnknownBlockType)arg1 whenItemWithIDIsOnDisk:(id)arg2;
- (CDUnknownBlockType)popDownloadedBlockForItemID:(id)arg1;
- (CDUnknownBlockType)popOnDiskBlockForItemID:(id)arg1;
- (void)_removeDownloadedBlockToPerformForItemID:(id)arg1;
- (void)_removeOnDiskBlockToPerformForItemID:(id)arg1;
- (void)_removeAllShareAcceptanceBlocks;
- (_Bool)validateStructureLoggingToFile:(struct __sFILE *)arg1 db:(id)arg2;
- (_Bool)validateItemsLoggingToFile:(struct __sFILE *)arg1 db:(id)arg2;
- (_Bool)existsByItemID:(id)arg1;
- (id)fileIDForDirectoryItemID:(id)arg1 db:(id)arg2;
- (id)directoryItemIDByFileID:(unsigned long long)arg1;
- (id)itemByRowID:(unsigned long long)arg1;
- (id)documentItemByItemID:(id)arg1;
- (id)itemByItemID:(id)arg1;
- (id)serverItemByItemID:(id)arg1;
- (long long)serverRankByItemID:(id)arg1;
- (_Bool)_resetItemsTable;
- (_Bool)dumpTablesToContext:(id)arg1 error:(id *)arg2;
- (_Bool)dumpStatusToContext:(id)arg1 error:(id *)arg2;
- (void)startDownloadingItemsUsingGroup:(id)arg1;
- (void)startDownloadItem:(id)arg1 options:(unsigned long long)arg2 group:(id)arg3;
- (_Bool)evictItem:(id)arg1 group:(id)arg2 error:(id *)arg3;
- (_Bool)hasCompletedInitialSyncDownOnce;
- (void)didApplyTombstoneForRank:(long long)arg1;
- (void)didGCTombstoneRanks:(id)arg1;
- (void)signalFaultingWatchers:(id)arg1;
- (unsigned long long)documentCount;
- (unsigned long long)documentEvictableSizeUsageWithAccessTimeDelta:(double)arg1;
- (unsigned long long)documentEvictableSizeUsageWithUrgency:(int)arg1;
- (unsigned long long)documentEvictableSizeUsage;
- (unsigned long long)documentSizeUsage;
- (_Bool)hasLocalChanges;
- (_Bool)hasUbiquitousDocuments;
- (_Bool)hasDocumentsOrDirectory;
- (void)handleRootRecordDeletion;
- (void)didSyncDownRequestID:(unsigned long long)arg1 maxApplyRank:(long long)arg2 caughtUpWithServer:(_Bool)arg3 syncDownDate:(id)arg4;
- (void)syncDownOperation:(id)arg1 didFinishWithError:(id)arg2 status:(long long)arg3;
- (void)_showiCloudDriveAppUpSellDialogIfNeeded;
@property(readonly, nonatomic) NSArray *syncThrottles; // @synthesize syncThrottles=_syncThrottles;
- (void)_syncUpOfRecords:(id)arg1 didFinishWithError:(id)arg2;
- (void)_learnCKInfosFromSavedRecords:(id)arg1;
- (unsigned long long)nextSyncUpRequestID;
- (void)_markRequestIDAcked;
- (void)_markLatestSyncRequestFailed;
- (void)clearSyncUpError;
- (void)resetSyncBudgetAndThrottle;
- (void)scheduleSyncDownFirst;
- (void)scheduleSyncDown;
- (void)scheduleSyncUp;
- (void)_startSync;
- (id)syncDownImmediately;
- (void)clearSyncStateBits:(unsigned int)arg1;
- (void)setSyncStateBits:(unsigned int)arg1;
@property(readonly) unsigned int syncState;
- (void)didClearOutOfQuota;
- (long long)throttleHashWithItemID:(id)arg1;
- (void)didCreateDocumentScopedItem;
- (void)didFindLostItem:(id)arg1;
- (void)updateFromFSAtPath:(id)arg1;
- (void)scheduleDeepScan;
- (unsigned long long)markChildrenLostForItemID:(id)arg1;
- (unsigned long long)allocateLostStampAddingBackoff:(_Bool)arg1;
- (id)nextLostItemIDWithBackoff:(long long *)arg1 now:(long long)arg2;
- (_Bool)_fetchNextLostItemID:(id *)arg1 parentID:(id *)arg2 stamp:(long long *)arg3;
@property(readonly, nonatomic) unsigned long long lostHeapKey;
@property(readonly, nonatomic) NSNumber *deepScanStamp;
- (unsigned long long)backoffBeforeProcessingLostItemWithStamp:(unsigned long long)arg1;
- (id)coordinatorForItem:(id)arg1 forRead:(_Bool)arg2;
- (struct PQLResultSet *)liveTargetedAliasesEnumeratorWithCount:(unsigned long long)arg1;
- (struct PQLResultSet *)itemsEnumeratorChildOf:(id)arg1 rankMin:(unsigned long long)arg2 rankMax:(unsigned long long)arg3 count:(unsigned long long)arg4;
- (struct PQLResultSet *)itemsEnumeratorWithRankMin:(unsigned long long)arg1 rankMax:(unsigned long long)arg2 namePrefix:(id)arg3 shouldIncludeFolders:(_Bool)arg4 shouldIncludeAliases:(_Bool)arg5 shouldIncludeDataScope:(_Bool)arg6 shouldIncludeDocumentsScope:(_Bool)arg7 count:(unsigned long long)arg8;
- (struct PQLResultSet *)documentsNotIdleEnumerator;
- (struct PQLResultSet *)itemsWithInFlightDiffsEnumerator;
- (struct PQLResultSet *)itemsEnumerator;
- (struct PQLResultSet *)itemsEnumeratorWithDB:(id)arg1;
- (id)itemByFileID:(unsigned long long)arg1;
- (id)itemByDocumentID:(unsigned int)arg1;
- (id)newLocalItemFromPQLResultSet:(id)arg1 error:(id *)arg2;
- (id)xattrForSignature:(id)arg1;
- (id)descriptionWithContext:(id)arg1;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly, nonatomic) _Bool isGreedy;
- (_Bool)hasUbiquityClientsConnected;
- (_Bool)isSyncBlockedBecauseOSNeedsUpgrade;
- (_Bool)isSyncBlockedBecauseAppNotInstalled;
- (_Bool)isSyncBlocked;
- (void)clearStateBits:(unsigned int)arg1;
- (_Bool)setStateBits:(unsigned int)arg1;
- (unsigned int)_activateState:(unsigned int)arg1 origState:(unsigned int)arg2;
- (void)removeClientUsingUbiquity:(id)arg1;
- (void)addClientUsingUbiquity:(id)arg1;
@property(readonly, nonatomic) _Bool isForeground;
- (void)removeForegroundClient:(id)arg1;
- (void)_armForegroundGraceTimerForClientDescription:(id)arg1;
- (void)didReceiveHandoffRequest;
- (void)addForegroundClient:(id)arg1;
- (void)_notifyContainerBeingNowForeground;
- (void)_notifyFrameworkContainersMonitorWithState:(_Bool)arg1;
- (void)disconnectNSMDQListenerAsync;
- (_Bool)handleResetErrorIfNeeded:(id)arg1;
- (void)handleZoneBlockedErrorIfNeeded:(id)arg1;
- (void)scheduleResetServerAndClientTruthsForReason:(const char *)arg1;
- (void)cancelFileCoordinators;
- (void)close;
- (void)resume;
- (void)associateWithServerZone:(id)arg1;
- (void)updateWithPlist:(id)arg1;
@property(readonly, nonatomic) NSMutableDictionary *plist;
- (void)dealloc;
- (id)initWithPlist:(id)arg1 containerID:(id)arg2 dbRowID:(id)arg3 db:(id)arg4 session:(id)arg5;
- (id)initForCreationWithContainerID:(id)arg1 dbRowID:(id)arg2 db:(id)arg3 session:(id)arg4;
- (id)initWithContainerID:(id)arg1 dbRowID:(id)arg2 db:(id)arg3 session:(id)arg4 initialCreation:(_Bool)arg5;
- (id)init;
- (void)unregisterQueryWithAliases:(_Bool)arg1 isRecursive:(_Bool)arg2;
- (void)registerQueryWithAliases:(_Bool)arg1 isRecursive:(_Bool)arg2;
@property(readonly) _Bool hasActiveAliasQueries;
@property(readonly) _Bool hasActiveRecursiveQueries;
@property(readonly) _Bool hasActiveQueries;
@property(readonly, nonatomic) NSURL *url;
@property(readonly, nonatomic) NSString *pathRelativeToRoot;
@property(readonly, nonatomic) NSString *absolutePath;
- (id)asSharedContainer;
- (id)asPrivateContainer;
@property(readonly, nonatomic) _Bool isSharedContainer;
@property(readonly, nonatomic) _Bool isPrivateContainer;
@property(readonly, nonatomic) NSString *ownerName;
- (void)_finishedReset:(unsigned long long)arg1;
- (void)_mkdirContainerIfNeeded;
- (id)_cancelAllOperationsForReset;
- (void)_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:(CDUnknownBlockType)arg1;
- (void)_performAfterResetServerAndClientTruthsAndUnlinkData:(CDUnknownBlockType)arg1;
- (void)_performWhileResettingClientTruths:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_removeTargetedAliasesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_reset:(unsigned long long)arg1;
- (void)scheduleReset:(unsigned long long)arg1;
- (void)cancelReset;

@end

