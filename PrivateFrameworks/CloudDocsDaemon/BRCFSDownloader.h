//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CloudDocsDaemon/BRCFSSchedulerBase.h>

#import <CloudDocsDaemon/BRCModule-Protocol.h>

@class BRCDeadlineScheduler, NSDate, NSString, brc_task_tracker;

__attribute__((visibility("hidden")))
@interface BRCFSDownloader : BRCFSSchedulerBase <BRCModule>
{
    _Bool _initialKickDone;
    brc_task_tracker *_tracker;
    unsigned long long _activeDownloadsSize;
    NSDate *_lastDownloadRefresh;
    BRCDeadlineScheduler *_downloadsDeadlineScheduler;
}

@property(readonly, nonatomic) BRCDeadlineScheduler *downloadsDeadlineScheduler; // @synthesize downloadsDeadlineScheduler=_downloadsDeadlineScheduler;
- (void).cxx_destruct;
- (void)transferStreamOfSyncContext:(id)arg1 didBecomeReadyWithMaxRecordsCount:(unsigned long long)arg2 sizeHint:(unsigned long long)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_transferStreamOfSyncContext:(id)arg1 didBecomeReadyWithMaxRecordsCount:(unsigned long long)arg2 sizeHint:(unsigned long long)arg3;
- (void)_sendLosersBatch:(id)arg1 maxRecordsCount:(unsigned long long)arg2;
- (void)_postponeLoserForWinner:(long long)arg1 etag:(id)arg2;
- (void)_sendContentsBatch:(id)arg1 maxRecordsCount:(unsigned long long)arg2;
- (void)_sendThumbnailsBatch:(id)arg1 maxRecordsCount:(unsigned long long)arg2;
- (void)_schedule;
- (_Bool)applyThumbnailToItem:(id)arg1 serverItem:(id)arg2 atURL:(id)arg3 applySchedulerState:(int *)arg4;
- (void)scheduleThumbnailDownloadForItem:(id)arg1 serverItem:(id)arg2 applySchedulerState:(int *)arg3;
- (_Bool)hasThumbnailToApplyForItem:(id)arg1;
- (_Bool)applyLosersToItem:(id)arg1 serverItem:(id)arg2 atURL:(id)arg3 applySchedulerState:(int *)arg4;
- (void)scheduleLosersDownloadForItem:(id)arg1 serverItem:(id)arg2 purgeStaleEntries:(_Bool)arg3 applySchedulerState:(int *)arg4;
- (_Bool)_hasLosersToDelete:(id)arg1 serverItem:(id)arg2;
- (void)evictLosersOnItem:(id)arg1 atURL:(id)arg2 applySchedulerState:(int *)arg3;
- (_Bool)shouldScheduleLosersEvictionForItem:(id)arg1;
- (void)scheduleContentDownloadForItem:(id)arg1 serverItem:(id)arg2;
- (_Bool)makeContentLive:(id)arg1;
- (_Bool)hasAdditionsToApplyForItem:(id)arg1 serverItem:(id)arg2;
- (_Bool)isDownloadingItem:(id)arg1;
- (unsigned long long)sizeOfActiveDownloads;
- (void)updateContentDownloadForMetaOnlyChange:(id)arg1 fromEtag:(id)arg2 toEtag:(id)arg3;
- (void)_deleteThrottleID:(long long)arg1 zone:(id)arg2;
- (void)addAliasItem:(id)arg1 toDownloadingItem:(id)arg2;
- (void)cancelAndCleanupItemDownloads:(id)arg1;
- (void)cancelAndCleanupItemDownload:(id)arg1 kind:(int)arg2;
- (void)cancelAndCleanupItemDownload:(id)arg1 kind:(int)arg2 etag:(id)arg3;
- (void)_finishDownloadCleanup:(id)arg1;
- (void)_cancelThrottles:(id)arg1 state:(int)arg2;
- (void)rescheduleThrottlesForPendingDiskSpaceWithAvailableSpace:(unsigned long long)arg1;
- (void)rescheduleThrottlesPendingWinnerForItem:(id)arg1;
- (void)rescheduleThrottlesPendingInitialSyncInZone:(id)arg1;
- (void)_finishedDownload:(id)arg1 kind:(int)arg2 operationID:(id)arg3 error:(id)arg4;
- (id)_sanitizeRecord:(id)arg1;
- (id)_zoneForDownload:(id)arg1 kind:(int)arg2 operationID:(id)arg3;
- (void)createThrottleForItem:(id)arg1 state:(int)arg2 kind:(int)arg3 etag:(id)arg4;
- (id)descriptionForThrottleID:(long long)arg1 zone:(id)arg2 now:(long long)arg3 context:(id)arg4;
- (void)_retriedDownload:(id)arg1 throttle:(id)arg2 operationID:(id)arg3 skipRetry:(_Bool)arg4;
- (void)_fetchStamps:(struct throttle_stamps *)arg1 now:(long long)arg2 throttle:(id)arg3 throttleID:(long long)arg4 kind:(int)arg5 etag:(id)arg6;
- (void)cancel;
- (void)_close;
- (void)suspend;
- (void)resume;
- (id)initWithAccountSession:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isCancelled;
@property(readonly) Class superclass;

@end

