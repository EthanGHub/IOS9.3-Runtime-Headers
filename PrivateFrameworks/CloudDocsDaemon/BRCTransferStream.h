//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <CloudDocsDaemon/BRCLifeCycle-Protocol.h>

@class BRCAccountSession, BRCDeadlineToken, BRCSyncContext, NSArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_group, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface BRCTransferStream : NSObject <BRCLifeCycle>
{
    BRCAccountSession *_session;
    BRCSyncContext *_syncContext;
    long long _nextFire;
    NSMutableDictionary *_inFlightOpByID;
    BRCDeadlineToken *_schedulingToken;
    NSObject<OS_dispatch_queue> *_transferQueue;
    unsigned long long _inFlightSize;
    NSObject<OS_dispatch_group> *_transferBatchRequestWaiter;
    _Bool _isWaitingForTransferBatch;
    _Bool _hasReachedCap;
    _Bool _isCancelled;
    CDUnknownBlockType _streamDidBecomeReadyToTransferRecords;
}

@property(readonly, nonatomic) unsigned long long inFlightSize; // @synthesize inFlightSize=_inFlightSize;
@property(nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(copy, nonatomic) CDUnknownBlockType streamDidBecomeReadyToTransferRecords; // @synthesize streamDidBecomeReadyToTransferRecords=_streamDidBecomeReadyToTransferRecords;
- (void).cxx_destruct;
- (void)close;
- (void)cancel;
- (void)suspend;
- (void)resume;
- (double)progressForTransferID:(id)arg1 operationID:(id)arg2;
- (void)addAliasItem:(id)arg1 toTransferWithID:(id)arg2 operationID:(id)arg3;
- (void)cancelTransferID:(id)arg1 operationID:(id)arg2;
- (void)_schedule;
- (void)addBatchOperation:(id)arg1;
- (void)_addBatchOperation:(id)arg1;
- (void)_evaluateCap;
- (void)_setReachedCap:(_Bool)arg1;
- (void)wakeUpForNextWorkAt:(long long)arg1;
- (id)initWithSyncContext:(id)arg1 name:(id)arg2 scheduler:(id)arg3;
@property(readonly) NSArray *operations;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

