//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSMutableSet, NSString;
@protocol DADataclassLockWatcher;

@interface DALocalDBGateKeeper : NSObject
{
    _Bool _claimedOwnershipOfContacts;
    _Bool _claimedOwnershipOfEvents;
    _Bool _claimedOwnershipOfNotes;
    _Bool _claimedOwnershipOfBookmarks;
    id <DADataclassLockWatcher> _contactsLockHolder;
    NSMutableArray *_contactsWaiters;
    NSMutableSet *_waiterIDsExpectingContactsLock;
    id <DADataclassLockWatcher> _eventsLockHolder;
    NSMutableArray *_eventsWaiters;
    NSMutableSet *_waiterIDsExpectingEventsLock;
    id <DADataclassLockWatcher> _notesLockHolder;
    NSMutableArray *_notesWaiters;
    NSMutableSet *_waiterIDsExpectingNotesLock;
    id <DADataclassLockWatcher> _bookmarksLockHolder;
    NSMutableArray *_bookmarksWaiters;
    NSMutableSet *_waiterIDsExpectingBookmarksLock;
    NSString *_unitTestHackRunLoopMode;
}

+ (id)sharedGateKeeper;
@property(retain, nonatomic) NSString *unitTestHackRunLoopMode; // @synthesize unitTestHackRunLoopMode=_unitTestHackRunLoopMode;
@property(retain, nonatomic) NSMutableSet *waiterIDsExpectingBookmarksLock; // @synthesize waiterIDsExpectingBookmarksLock=_waiterIDsExpectingBookmarksLock;
@property(retain, nonatomic) NSMutableArray *bookmarksWaiters; // @synthesize bookmarksWaiters=_bookmarksWaiters;
@property(retain, nonatomic) id <DADataclassLockWatcher> bookmarksLockHolder; // @synthesize bookmarksLockHolder=_bookmarksLockHolder;
@property(nonatomic) _Bool claimedOwnershipOfBookmarks; // @synthesize claimedOwnershipOfBookmarks=_claimedOwnershipOfBookmarks;
@property(retain, nonatomic) NSMutableSet *waiterIDsExpectingNotesLock; // @synthesize waiterIDsExpectingNotesLock=_waiterIDsExpectingNotesLock;
@property(retain, nonatomic) NSMutableArray *notesWaiters; // @synthesize notesWaiters=_notesWaiters;
@property(retain, nonatomic) id <DADataclassLockWatcher> notesLockHolder; // @synthesize notesLockHolder=_notesLockHolder;
@property(nonatomic) _Bool claimedOwnershipOfNotes; // @synthesize claimedOwnershipOfNotes=_claimedOwnershipOfNotes;
@property(retain, nonatomic) NSMutableSet *waiterIDsExpectingEventsLock; // @synthesize waiterIDsExpectingEventsLock=_waiterIDsExpectingEventsLock;
@property(retain, nonatomic) NSMutableArray *eventsWaiters; // @synthesize eventsWaiters=_eventsWaiters;
@property(retain, nonatomic) id <DADataclassLockWatcher> eventsLockHolder; // @synthesize eventsLockHolder=_eventsLockHolder;
@property(nonatomic) _Bool claimedOwnershipOfEvents; // @synthesize claimedOwnershipOfEvents=_claimedOwnershipOfEvents;
@property(retain, nonatomic) NSMutableSet *waiterIDsExpectingContactsLock; // @synthesize waiterIDsExpectingContactsLock=_waiterIDsExpectingContactsLock;
@property(retain, nonatomic) NSMutableArray *contactsWaiters; // @synthesize contactsWaiters=_contactsWaiters;
@property(retain, nonatomic) id <DADataclassLockWatcher> contactsLockHolder; // @synthesize contactsLockHolder=_contactsLockHolder;
@property(nonatomic) _Bool claimedOwnershipOfContacts; // @synthesize claimedOwnershipOfContacts=_claimedOwnershipOfContacts;
- (void).cxx_destruct;
- (void)_setUnitTestHackRunLoopMode:(id)arg1;
- (id)stateString;
- (void)claimedOwnershipOfDataclasses:(long long)arg1;
- (void)relinquishLocksForWaiter:(id)arg1 dataclasses:(long long)arg2 moreComing:(_Bool)arg3;
- (void)unregisterWaiterForDataclassLocks:(id)arg1;
- (void)_sendAllClearNotifications;
- (void)registerWaiter:(id)arg1 forDataclassLocks:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)registerPreemptiveWaiter:(id)arg1 forDataclassLocks:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_registerWaiter:(id)arg1 forDataclassLocks:(long long)arg2 preempt:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_notifyWaitersForDataclasses:(id)arg1;
- (void)_abortWaiterForWrappers:(id)arg1;
- (_Bool)_canWakenWaiter:(id)arg1;
- (void)dealloc;
- (id)init;

@end

