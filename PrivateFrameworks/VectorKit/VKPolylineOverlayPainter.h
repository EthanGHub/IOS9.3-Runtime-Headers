//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <VectorKit/VKOverlayPainter.h>

#import <VectorKit/VKPolylineObserver-Protocol.h>

@class NSSet, NSString, VKPolylineOverlay, VKRouteLine, VKTileKeyList, VKTimedAnimation;

@interface VKPolylineOverlayPainter : VKOverlayPainter <VKPolylineObserver>
{
    VKRouteLine *_routeLine;
    double _routeLineWidthScaleRegular;
    double _routeLineHalfWidthRealisticScale;
    _Bool _selected;
    VKPolylineOverlay *_routeOverlay;
    shared_ptr_696716c4 _viewUniforms;
    struct unique_ptr<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficManager<ggl::PilledTrafficRibbonDescriptor>>> _pilledTrafficManager;
    struct unique_ptr<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficLayer<ggl::PilledTrafficRibbonDescriptor>>> _pilledTrafficLayer;
    struct unique_ptr<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficManager<ggl::SolidTrafficRibbonDescriptor>>> _solidTrafficManager;
    struct unique_ptr<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor>, std::__1::default_delete<vk::TrafficLayer<ggl::SolidTrafficRibbonDescriptor>>> _solidTrafficLayer;
    struct unique_ptr<vk::RouteLineArrowManager, std::__1::default_delete<vk::RouteLineArrowManager>> _arrowManager;
    struct vector<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer>>, std::__1::allocator<std::__1::unique_ptr<vk::RouteLineArrowLayer, std::__1::default_delete<vk::RouteLineArrowLayer>>>> _arrowLayers;
    struct unique_ptr<vk::RouteLineManager, std::__1::default_delete<vk::RouteLineManager>> _routeLineManager;
    struct unique_ptr<vk::RouteLineLayer, std::__1::default_delete<vk::RouteLineLayer>> _routeLineLayer;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _debugRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _debugRenderItems;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::Shader::Setup>>> _debugShaderSetups;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _debugLineRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::Debug::BaseMesh>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BaseMesh>>> _debugUnmatchedRouteLineMeshes;
    double _previousViewUnitsPerPoint;
    int _styleZ;
    struct unordered_set<GEOComposedRouteSection *, std::__1::hash<GEOComposedRouteSection *>, std::__1::equal_to<GEOComposedRouteSection *>, std::__1::allocator<GEOComposedRouteSection *>> _selectedSections;
    fast_shared_ptr_502c59d0 _automobileSection;
    CDStruct_aa5aacbc _matrix;
    NSSet *_previousTilesInView;
    VKTileKeyList *_previousKeysInView;
    double _simplificationEpsilon;
    VKTimedAnimation *_fadeAnimation;
    float _alphaScale;
    VKTimedAnimation *_arrowFadeAnimation;
    float _arrowAlphaScale;
    _Bool _showArrows;
    VKTimedAnimation *_arrowCrossFadeAnimation;
    _Bool _showTraffic;
    _Bool _forceRoutelineUpdate;
    int _stencilValue;
    double _contentScale;
    unsigned long long _targetDisplayStep;
    float _crossfadingDisplayStep;
    _Bool _wasInRealisticMode;
    struct FeatureAttributeSet _trafficAttributes;
    struct TrafficMeshStyle _builtMeshStyle;
    shared_ptr_b80d91ee _carStyleQuery;
}

@property(nonatomic) _Bool showTraffic; // @synthesize showTraffic=_showTraffic;
@property(retain, nonatomic) VKPolylineOverlay *routeOverlay; // @synthesize routeOverlay=_routeOverlay;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)polyline:(id)arg1 selectedSections:(id)arg2 deselectedSections:(id)arg3;
- (void)stylesheetDidChange;
- (void)setContainerModel:(id)arg1;
- (shared_ptr_f06afc6c)styleManager;
- (void)updateRouteLineStencilValue:(int)arg1;
- (void)_didReceiveMemoryWarning;
- (void)prepareToDrawWithCanvas:(id)arg1;
- (float)automobileRouteLineWidthForCamera:(id)arg1 canvasSize:(struct CGSize)arg2;
- (_Bool)_shouldShowTraffic;
- (void)layoutWithContext:(id)arg1 tiles:(id)arg2 keysInView:(id)arg3;
- (void)layoutDebugUnmatchedRouteLine:(id)arg1 commandBuffer:(struct CommandBuffer *)arg2;
- (void)prepareDebugLines;
- (void)flushPools;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer *)arg2 strokeCommandBuffer:(struct CommandBuffer *)arg3 traveledFillCommandBuffer:(struct CommandBuffer *)arg4 fillCommandBuffer:(struct CommandBuffer *)arg5 tiles:(id)arg6 layer:(unsigned char)arg7;
- (void)gglLayoutWithContext:(id)arg1 traveledStrokeCommandBuffer:(struct CommandBuffer *)arg2 strokeCommandBuffer:(struct CommandBuffer *)arg3 traveledFillCommandBuffer:(struct CommandBuffer *)arg4 fillCommandBuffer:(struct CommandBuffer *)arg5 tiles:(id)arg6;
- (void)setNeedsLayoutForPolyline:(id)arg1;
@property(readonly, nonatomic) VKPolylineOverlay *polyline;
- (void)dealloc;
- (void)_userDefaultsDidChange:(id)arg1;
- (id)initWithOverlay:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

