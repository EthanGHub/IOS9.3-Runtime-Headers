//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <VectorKit/VKScreenCameraController.h>

#import <VectorKit/VKInteractiveCameraController-Protocol.h>
#import <VectorKit/VKTrackingCameraControllerDelegate-Protocol.h>

@class GEOMapRegion, NSString, VKMapCanvas, VKMapModel, VKTimedAnimation, VKTrackingCameraController;

__attribute__((visibility("hidden")))
@interface VKMapCameraController : VKScreenCameraController <VKTrackingCameraControllerDelegate, VKInteractiveCameraController>
{
    VKMapModel *_mapModel;
    VKMapCanvas *_mapCanvas;
    VKTimedAnimation *_horizontalOffsetAnimation;
    VKTrackingCameraController *_trackingCameraController;
    double _minDistanceToGroundAlongForwardVector;
    double _maxDistanceToGroundAlongForwardVector;
    double _canonicalSkyHeight;
    double _tracePlaybackSpeedMultiplier;
    _Bool _shouldLimitTrackingCameraHeight;
    int _trackingCameraPanStyle;
    double _userZoomFocusStyleGroundspanMeters;
    double _userZoomFocusStyleMinGroundspanMeters;
    double _userZoomFocusStyleMaxGroundspanMeters;
    double _cameraHorizontalOffset;
    double _finalYaw;
    double _finalPitch;
    float _navigationPuckSize;
    _Bool _pinching;
    struct CGPoint _pinchStartFocusPoint;
    _Bool _pitching;
    struct CGPoint _pitchStartFocusPoint;
    _Bool _panning;
}

@property(nonatomic) _Bool shouldLimitTrackingCameraHeight; // @synthesize shouldLimitTrackingCameraHeight=_shouldLimitTrackingCameraHeight;
@property(nonatomic) float navigationPuckSize; // @synthesize navigationPuckSize=_navigationPuckSize;
@property(nonatomic) int trackingCameraPanStyle; // @synthesize trackingCameraPanStyle=_trackingCameraPanStyle;
@property(nonatomic) double tracePlaybackSpeedMultiplier; // @synthesize tracePlaybackSpeedMultiplier=_tracePlaybackSpeedMultiplier;
@property(nonatomic) double canonicalSkyHeight; // @synthesize canonicalSkyHeight=_canonicalSkyHeight;
@property(nonatomic) VKMapCanvas *mapCanvas; // @synthesize mapCanvas=_mapCanvas;
@property(retain, nonatomic) VKMapModel *mapModel; // @synthesize mapModel=_mapModel;
- (void)updatedMatchedSection:(fast_shared_ptr_502c59d0)arg1 index:(struct PolylineCoordinate *)arg2;
- (void)edgeInsetsDidEndAnimating;
- (void)edgeInsetsWillBeginAnimating;
- (void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3;
- (double)altitude;
- (void)setCenterCoordinate3D:(CDStruct_071ac149)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(CDUnknownBlockType)arg7 completion:(CDUnknownBlockType)arg8;
@property(readonly, nonatomic) CDStruct_071ac149 centerCoordinate;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(CDUnknownBlockType)arg7 completion:(CDUnknownBlockType)arg8;
@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;
@property(readonly, nonatomic) GEOMapRegion *mapRegion;
- (id)_mapRegionIgnoringFarAmount:(double)arg1;
- (void)_animateToPosition:(struct VKPoint)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 timingCurve:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
- (void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (double)durationToAnimateToMapRegion:(id)arg1;
- (CDStruct_c3b9c2ee)_mercatorCenterCoordinateForMapRegion:(id)arg1;
@property(readonly, nonatomic) double pitch;
- (void)setYaw:(double)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) double yaw;
@property(readonly, nonatomic) double presentationYaw;
@property(nonatomic) double userZoomFocusStyleMaxGroundspanMeters;
@property(nonatomic) double userZoomFocusStyleMinGroundspanMeters;
@property(nonatomic) double userZoomFocusStyleGroundspanMeters;
- (void)canvasFrameDidChange;
- (void)trackingCameraController:(id)arg1 updatedStartAnimationTargetPosition:(struct VKPoint)arg2 orientation:(const CDStruct_aa5aacbc *)arg3;
- (void)updateCameraZBounds;
- (_Bool)updateCameraToPositionOrientationLimits;
- (_Bool)currentZoomLevelAllowsRotation;
- (_Bool)clampZoomLevelIfNecessary;
- (void)setGesturing:(_Bool)arg1;
- (void)panWithOffset:(struct CGPoint)arg1 relativeToScreenPoint:(struct CGPoint)arg2 animated:(_Bool)arg3 duration:(double)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (_Bool)canEnter3DModeNoUpdate;
- (_Bool)canEnter3DMode;
- (_Bool)isFullyPitched;
- (_Bool)isPitched;
@property(nonatomic) _Bool allowDatelineWraparound;
- (void)exit3DMode;
- (void)enter3DMode;
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1 panAtStartPoint:(_Bool)arg2;
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)zoomToLevel:(double)arg1 withFocusPoint:(struct CGPoint)arg2;
- (struct CGPoint)_scaledScreenPointForPoint:(struct CGPoint)arg1;
- (struct CGPoint)_centerScreenPoint;
@property(nonatomic) double trackingZoomScale;
- (_Bool)trackingCanZoomOut;
- (_Bool)trackingCanZoomIn;
- (_Bool)isAtDefaultTrackingZoomScale;
- (_Bool)isTracking;
- (void)clampPitch:(double *)arg1 yaw:(double *)arg2 atTargetPositionZ:(double)arg3;
- (_Bool)snapMapIfNecessary:(const struct VKPoint *)arg1 animated:(_Bool)arg2;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(struct VKPoint)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_b926a728 *)arg2;
- (void)startTrackingAnnotation:(id)arg1 trackHeading:(_Bool)arg2 animated:(_Bool)arg3;
- (void)startCameraMotionAnimated:(_Bool)arg1 pounceCompletionHandler:(CDUnknownBlockType)arg2;
- (void)pauseCameraMotion;
- (void)stopCameraMotion;
- (void)updateCameraContext:(id)arg1;
- (_Bool)restoreViewportFromInfo:(id)arg1;
- (id)viewportInfo;
- (void)tapZoom:(struct CGPoint)arg1 levels:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)pinch:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)pan:(struct CGPoint)arg1;
- (void)pitch:(struct CGPoint)arg1 translation:(double)arg2;
- (void)rotate:(double)arg1 atScreenPoint:(struct CGPoint)arg2;
- (void)zoom:(double)arg1 withPoint:(struct VKPoint)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)zoomToLevel:(double)arg1 withPoint:(struct VKPoint)arg2;
- (void)rotateToYaw:(double)arg1 withPoint:(const struct VKPoint *)arg2 animated:(_Bool)arg3;
- (void)rotateToPitch:(double)arg1 withPoint:(const struct VKPoint *)arg2 preserveAltitude:(_Bool)arg3 animated:(_Bool)arg4 exaggerate:(_Bool)arg5;
- (float)maxPitchForNormalizedZoomLevel:(float)arg1;
- (float)idealPitchForNormalizedZoomLevel:(float)arg1;
- (float)minimumPitchForNormalizedZoomLevel:(float)arg1;
- (float)normalizedZoomLevelAdjustmentForTileSize:(long long)arg1;
- (float)currentTopDownMinimumNormalizedZoomLevel;
- (float)currentMinimumNormalizedZoomLevel;
- (float)currentMaximumNormalizedZoomLevel;
- (long long)maximumNormalizedZoomLevel;
- (long long)minimumNormalizedZoomLevel;
- (float)currentStyleZoomLevel;
- (float)currentNormalizedZoomLevel;
- (float)currentDisplayZoomLevel;
- (long long)tileSize;
- (struct VKPoint)groundPointFromScreenPoint:(struct CGPoint)arg1;
- (void)canvasDidLayout;
- (id)detailedDescription;
- (void)dealloc;
- (id)init;
- (void)setEdgeInsets:(struct VKEdgeInsets)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

