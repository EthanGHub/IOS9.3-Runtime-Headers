//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <CameraKit/AVCaptureFileOutputRecordingDelegate-Protocol.h>
#import <CameraKit/AVCaptureMetadataOutputObjectsDelegate-Protocol.h>
#import <CameraKit/AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h>
#import <CameraKit/BKSAccelerometerDelegate-Protocol.h>
#import <CameraKit/PLCameraEffectsRendererDelegate-Protocol.h>

@class AVCaptureDevice, AVCaptureDeviceFormat, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCaptureMovieFileOutput, AVCaptureOutput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, BKSAccelerometer, CIFilter, CMKAvalancheCaptureService, CMKDebugCaptureService, CMKEffectsRenderer, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSTimer;
@protocol OS_dispatch_queue, OS_dispatch_source, PLCameraControllerDelegate;

@interface CMKCaptureController : NSObject <AVCaptureMetadataOutputObjectsDelegate, PLCameraEffectsRendererDelegate, BKSAccelerometerDelegate, AVCaptureFileOutputRecordingDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
{
    AVCaptureSession *_avCaptureSession;
    AVCaptureDevice *_avCaptureDeviceFront;
    AVCaptureDevice *_avCaptureDeviceBack;
    AVCaptureDevice *_avCaptureDeviceAudio;
    AVCaptureDeviceInput *_avCaptureInputFront;
    AVCaptureDeviceInput *_avCaptureInputBack;
    AVCaptureDeviceInput *_avCaptureInputAudio;
    AVCaptureStillImageOutput *_avCaptureOutputPhoto;
    AVCaptureMovieFileOutput *_avCaptureOutputVideo;
    AVCaptureVideoDataOutput *_avCaptureOutputPanorama;
    AVCaptureVideoDataOutput *_avCaptureOutputEffectPreview;
    AVCaptureMetadataOutput *_avCaptureOutputMetadata;
    AVCaptureDeviceFormat *_mogulFormatBack;
    AVCaptureDeviceFormat *_mogulFormatFront;
    _Bool _mogulFormatBackSupportsAlternate;
    _Bool _mogulFormatFrontSupportsAlternate;
    id _panoramaProcessor;
    id _panoramaImageQueue;
    struct CGSize _panoramaPreviewSize;
    float _panoramaPreviewScale;
    NSObject<OS_dispatch_queue> *_avCaptureSessionDispatchQueue;
    NSObject<OS_dispatch_queue> *_avCaptureOutputMetadataQueue;
    AVCaptureDevice *_currentDevice;
    AVCaptureDeviceInput *_currentInput;
    AVCaptureOutput *_currentOutput;
    AVCaptureVideoPreviewLayer *_previewLayer;
    id _remoteShutterConnection;
    struct CGRect _cleanAperture;
    _Bool _shouldBeStopped;
    long long _cameraMode;
    long long _cameraDevice;
    long long _flashMode;
    int _captureOrientation;
    _Bool _imageWriterQueueIsAvailable;
    unsigned long long _ioSurfaceCounter;
    _Bool _hdrCaptureIncludesEV0Image;
    int _hdrEV0PhotoCaptureCount;
    id <PLCameraControllerDelegate> _delegate;
    double _maximumCaptureDuration;
    int _videoCaptureQuality;
    NSString *_videoCapturePath;
    BKSAccelerometer *_accelerometer;
    struct CGImage *_lastVideoPreviewFrameImageRef;
    _Bool _isFocusingOnFace;
    long long _cameraOrientation;
    NSTimer *_idleTimerTimer;
    _Bool _delaySuspend;
    NSTimer *_delaySuspendTimer;
    double _maxVideoZoomFactorRear;
    double _maxVideoZoomFactorFront;
    unsigned long long _keepAliveCounter;
    NSTimer *_keepAliveTimer;
    NSTimer *_keepAliveFailsafeTimer;
    struct {
        unsigned int supportsVideo:1;
        unsigned int supportsHDRRear:1;
        unsigned int supportsHDRFront:1;
        unsigned int supportsSuggestedHDRRear:1;
        unsigned int supportsSuggestedHDRFront:1;
        unsigned int supportsAvalancheAnalysisRear:1;
        unsigned int supportsAvalancheAnalysisFront:1;
        unsigned int supportsMogulRear:1;
        unsigned int supportsMogulFront:1;
        unsigned int supportsLiveEffects:1;
        unsigned int supportsPanorama:1;
        unsigned int supportsVideoStillCapture:1;
        unsigned int supportsPreviewDuringHDR:1;
        unsigned int supportsTimelapse:1;
        unsigned int hasBackFlash:1;
        unsigned int hasFrontFlash:1;
        unsigned int hasBackCamera:1;
        unsigned int hasFrontCamera:1;
        unsigned int deferStartVideoCapture:1;
        unsigned int inCall:1;
        unsigned int isCapturingPanorama:1;
        unsigned int isProcessingPanorama:1;
        unsigned int focusDisabled:1;
        unsigned int serverDied:1;
        unsigned int didGetDeviceUnavailableInBackground:1;
        unsigned int didSetLocationData:1;
        unsigned int isChangingMode:1;
        unsigned int flashWillFireAutomatically:1;
        unsigned int torchWillFireAutomatically:1;
        unsigned int isCameraApp:1;
        unsigned int didSendPreviewStartedCallbackToEmptyDelegate:1;
        unsigned int didGetPreviewStartedCallbackAfterResume:1;
        unsigned int logFocusInfo:1;
        unsigned int logPreviewInfo:1;
        unsigned int logCaptureInfo:1;
        unsigned int logFlashInfo:1;
        unsigned int logDebugInfo:1;
        unsigned int logPanoInfo:1;
        unsigned int enable720p60Recording:1;
        unsigned int isInternalInstall:1;
        unsigned int shouldTearDownPano:1;
        unsigned int convertSampleBufferToJPEG:1;
        unsigned int delegateDidStartSession:1;
        unsigned int delegateWillStartPreview:1;
        unsigned int delegatePreviewDidStart:1;
        unsigned int delegateSessionDidStart:1;
        unsigned int delegateDidStopSession:1;
        unsigned int delegateWillStopSession:1;
        unsigned int delegateSessionDidStop:1;
        unsigned int delegateSessionWasInterrupted:1;
        unsigned int delegateSessionInterruptionEnded:1;
        unsigned int delegateServerError:1;
        unsigned int delegateCleanApertureDidChange:1;
        unsigned int delegateModeWillChange:1;
        unsigned int delegateModeDidChange:1;
        unsigned int delegateWillTakePhoto:1;
        unsigned int delegateDidTakePhoto:1;
        unsigned int delegateCapturedPhoto:1;
        unsigned int delegateDidChangeCaptureAbility:1;
        unsigned int delegateDidChangePanoramaConfiguration:1;
        unsigned int delegateDidUpdatePanoramaPreview:1;
        unsigned int delegateDidReceivePanoramaIssue:1;
        unsigned int delegateDidStartPanoramaCapture:1;
        unsigned int delegateWillStopPanoramaCapture:1;
        unsigned int delegatePanoramaWillStartProcessing:1;
        unsigned int delegatePanoramaDidStopProcessing:1;
        unsigned int delegateCapturedPanorama:1;
        unsigned int delegateVideoCaptureDidStart:1;
        unsigned int delegateDidStopVideoCapture:1;
        unsigned int delegateVideoCaptureDidStop:1;
        unsigned int delegateDidChangeFocusMode:1;
        unsigned int delegateDidChangeExposureMode:1;
        unsigned int delegateFocusDidStart:1;
        unsigned int delegateFocusDidEnd:1;
        unsigned int delegateExposureDidStart:1;
        unsigned int delegateExposureDidEnd:1;
        unsigned int delegateWillResetFocusExposure:1;
        unsigned int delegateDidChangeUserLockedFocus:1;
        unsigned int delegateDidChangeUserLockedExposure:1;
        unsigned int delegateDidChangeExposureTargetBias:1;
        unsigned int delegateFaceMetadataDidChange:1;
        unsigned int delegateVideoZoomFactorDidChange:1;
        unsigned int delegateFlashWillFireChanged:1;
        unsigned int delegateTorchActiveChanged:1;
        unsigned int delegateTorchAvailabilityChanged:1;
        unsigned int delegateHDRSuggestionChanged:1;
        unsigned int delegateRemoteShutterPressed:1;
        unsigned int delegateRemoteShutterCanceled:1;
        unsigned int delegateRemoteFocusTapped:1;
        unsigned int delegateRemoteShutterStartVideoCapture:1;
        unsigned int delegateRemoteShutterStopVideoCapture:1;
        unsigned int delegateRemoteShutterSetFlashMode:1;
        unsigned int delegateRemoteShutterToggleCameraDevice:1;
        unsigned int delegateDidStartVideoRequest:1;
        unsigned int delegateDidStopVideoRequest:1;
        unsigned int delegateDidFinishVideoRequest:1;
        unsigned int delegateDidStartCapturingPanoramaRequest:1;
        unsigned int delegateDidStopCapturingPanoramaRequest:1;
        unsigned int delegateDidStartProcessingPanoramaRequest:1;
        unsigned int delegateDidStopProcessingPanoramaRequest:1;
        unsigned int delegateDidFinishPanoramaRequest:1;
        unsigned int delegatePanoramaConfigurationChanged:1;
        unsigned int delegateDidOutputPanoramaParameters:1;
    } _cameraFlags;
    NSObject<OS_dispatch_queue> *_dispatchTimerQueue;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    _Bool __previewPaused;
    _Bool __previewLayerEnabledForRenderer;
    _Bool __videoDataOutputEnabledForRenderer;
    _Bool _canCapturePhotoFromVideoModeWhenNotRecording;
    _Bool _use60FPSVideo;
    _Bool _capturingTimelapse;
    _Bool _resetFocusWhenSubjectAreaChanged;
    _Bool _resetExposureWhenSubjectAreaChanged;
    _Bool _userLockedFocus;
    _Bool _userLockedExposure;
    _Bool _HDRDetectionEnabled;
    _Bool _useAlternateSlomoFront;
    _Bool _useAlternateSlomoRear;
    _Bool _performingAvalancheCapture;
    _Bool _disableAllPreviewSuspensionDuringCapture;
    _Bool __atomicEffectsAvailable;
    _Bool __configuringCamera;
    _Bool __sessionReady;
    _Bool __rebuildingSession;
    _Bool __atomicModeChangeWaitingForPreviewStarted;
    _Bool __atomicModeChangeWaitingForConfigureSession;
    _Bool __panoramaProcessorReadyForSampleBuffers;
    _Bool __wasStillImageStabilzationOnBeforeTimedCapture;
    _Bool __ignoreSubjectAreaChanges;
    _Bool __lockFocusAfterFocusFinishes;
    _Bool __lockExposureAfterExposeFinishes;
    _Bool __locationAcquiredForTimelapseCapture;
    float __lockLensPositionTarget;
    CDUnknownBlockType postSessionSetupBlock;
    CMKEffectsRenderer *_effectsRenderer;
    NSArray *_supportedCameraModes;
    NSObject<OS_dispatch_queue> *__effectFilterIndexQueue;
    NSDictionary *__effectFilterIndices;
    NSObject<OS_dispatch_queue> *__captureIsolationQueue;
    NSObject<OS_dispatch_queue> *__effectRenderingQueue;
    NSMutableArray *__inflightStillImageCaptureRequests;
    NSMutableArray *__inflightVideoCaptureResponses;
    NSMutableArray *__deferredVideoCaptureRequests;
    NSMutableArray *__inflightPanoramaCaptureRequests;
    NSMutableArray *__processingPanoramaCaptureRequests;
    NSMutableArray *__currentFaceMetadata;
    NSMutableDictionary *__servicesByType;
    CMKAvalancheCaptureService *__avalancheCaptureService;
    CMKDebugCaptureService *__debugCaptureService;
    long long __deviceLockCount;
    double __ignoreSubjectAreaChangesUntilTime;
    CDUnknownBlockType __lockLensPositionCompletionBlock;
}

+ (_Bool)_shouldExtractDiagnostics;
+ (double)panoramaPreviewHorizontalInset;
+ (struct CGSize)panoramaPreviewSize;
+ (float)focusLensPositionCurrentSentinel;
+ (id)_dateFormatterForVideoMetadata;
+ (id)videoMetadataArrayWithLocation:(id)arg1 date:(id)arg2 didSetLocationData:(_Bool *)arg3;
+ (_Bool)isVideoMode:(long long)arg1;
+ (_Bool)isStillImageMode:(long long)arg1;
+ (id)sharedInstance;
@property(readonly, nonatomic) _Bool _locationAcquiredForTimelapseCapture; // @synthesize _locationAcquiredForTimelapseCapture=__locationAcquiredForTimelapseCapture;
@property(nonatomic, setter=_setLockLensPositionTarget:) float _lockLensPositionTarget; // @synthesize _lockLensPositionTarget=__lockLensPositionTarget;
@property(copy, nonatomic, setter=_setLockLensPositionCompletionBlock:) CDUnknownBlockType _lockLensPositionCompletionBlock; // @synthesize _lockLensPositionCompletionBlock=__lockLensPositionCompletionBlock;
@property(readonly, nonatomic) _Bool _lockExposureAfterExposeFinishes; // @synthesize _lockExposureAfterExposeFinishes=__lockExposureAfterExposeFinishes;
@property(readonly, nonatomic) _Bool _lockFocusAfterFocusFinishes; // @synthesize _lockFocusAfterFocusFinishes=__lockFocusAfterFocusFinishes;
@property(readonly, nonatomic) double _ignoreSubjectAreaChangesUntilTime; // @synthesize _ignoreSubjectAreaChangesUntilTime=__ignoreSubjectAreaChangesUntilTime;
@property(readonly, nonatomic) _Bool _ignoreSubjectAreaChanges; // @synthesize _ignoreSubjectAreaChanges=__ignoreSubjectAreaChanges;
@property(setter=_setDeviceLockCount:) long long _deviceLockCount; // @synthesize _deviceLockCount=__deviceLockCount;
@property(readonly, nonatomic) CMKDebugCaptureService *_debugCaptureService; // @synthesize _debugCaptureService=__debugCaptureService;
@property(readonly, nonatomic) CMKAvalancheCaptureService *_avalancheCaptureService; // @synthesize _avalancheCaptureService=__avalancheCaptureService;
@property(readonly, nonatomic) NSMutableDictionary *_servicesByType; // @synthesize _servicesByType=__servicesByType;
@property(readonly, nonatomic) NSMutableArray *_currentFaceMetadata; // @synthesize _currentFaceMetadata=__currentFaceMetadata;
@property(readonly, nonatomic) _Bool _wasStillImageStabilzationOnBeforeTimedCapture; // @synthesize _wasStillImageStabilzationOnBeforeTimedCapture=__wasStillImageStabilzationOnBeforeTimedCapture;
@property(readonly, nonatomic) _Bool _panoramaProcessorReadyForSampleBuffers; // @synthesize _panoramaProcessorReadyForSampleBuffers=__panoramaProcessorReadyForSampleBuffers;
@property(readonly, nonatomic) NSMutableArray *_processingPanoramaCaptureRequests; // @synthesize _processingPanoramaCaptureRequests=__processingPanoramaCaptureRequests;
@property(readonly, nonatomic) NSMutableArray *_inflightPanoramaCaptureRequests; // @synthesize _inflightPanoramaCaptureRequests=__inflightPanoramaCaptureRequests;
@property(readonly, nonatomic) NSMutableArray *_deferredVideoCaptureRequests; // @synthesize _deferredVideoCaptureRequests=__deferredVideoCaptureRequests;
@property(readonly, nonatomic) NSMutableArray *_inflightVideoCaptureResponses; // @synthesize _inflightVideoCaptureResponses=__inflightVideoCaptureResponses;
@property(readonly, nonatomic) NSMutableArray *_inflightStillImageCaptureRequests; // @synthesize _inflightStillImageCaptureRequests=__inflightStillImageCaptureRequests;
@property(getter=_isAtomicModeChangeWaitingForConfigureSession, setter=_setAtomicModeChangeWaitingForConfigureSession:) _Bool _atomicModeChangeWaitingForConfigureSession; // @synthesize _atomicModeChangeWaitingForConfigureSession=__atomicModeChangeWaitingForConfigureSession;
@property(getter=_isAtomicModeChangeWaitingForPreviewStarted, setter=_setAtomicModeChangeWaitingForPreviewStarted:) _Bool _atomicModeChangeWaitingForPreviewStarted; // @synthesize _atomicModeChangeWaitingForPreviewStarted=__atomicModeChangeWaitingForPreviewStarted;
@property(nonatomic) _Bool _rebuildingSession; // @synthesize _rebuildingSession=__rebuildingSession;
@property(nonatomic, getter=_isSessionReady, setter=_setSessionReady:) _Bool _sessionReady; // @synthesize _sessionReady=__sessionReady;
@property(readonly, retain) NSObject<OS_dispatch_queue> *_effectRenderingQueue; // @synthesize _effectRenderingQueue=__effectRenderingQueue;
@property(readonly, retain) NSObject<OS_dispatch_queue> *_captureIsolationQueue; // @synthesize _captureIsolationQueue=__captureIsolationQueue;
@property(getter=_isConfiguringCamera, setter=_setConfiguringCamera:) _Bool _configuringCamera; // @synthesize _configuringCamera=__configuringCamera;
@property(retain, nonatomic, setter=_setEffectFilterIndices:) NSDictionary *_effectFilterIndices; // @synthesize _effectFilterIndices=__effectFilterIndices;
@property(readonly, retain) NSObject<OS_dispatch_queue> *_effectFilterIndexQueue; // @synthesize _effectFilterIndexQueue=__effectFilterIndexQueue;
@property(setter=_setAtomicEffectsAvailable:) _Bool _atomicEffectsAvailable; // @synthesize _atomicEffectsAvailable=__atomicEffectsAvailable;
@property(nonatomic) _Bool disableAllPreviewSuspensionDuringCapture; // @synthesize disableAllPreviewSuspensionDuringCapture=_disableAllPreviewSuspensionDuringCapture;
- (void)_setPerformingAvalancheCapture:(_Bool)arg1;
@property(nonatomic) _Bool performingAvalancheCapture; // @synthesize performingAvalancheCapture=_performingAvalancheCapture;
- (void)_setSupportedCameraModes:(id)arg1;
@property(copy, nonatomic) NSArray *supportedCameraModes; // @synthesize supportedCameraModes=_supportedCameraModes;
- (void)_setEffectsRenderer:(id)arg1;
@property(retain) CMKEffectsRenderer *effectsRenderer; // @synthesize effectsRenderer=_effectsRenderer;
@property(nonatomic) _Bool useAlternateSlomoRear; // @synthesize useAlternateSlomoRear=_useAlternateSlomoRear;
@property(nonatomic) _Bool useAlternateSlomoFront; // @synthesize useAlternateSlomoFront=_useAlternateSlomoFront;
@property(nonatomic, getter=isHDRDetectionEnabled) _Bool HDRDetectionEnabled; // @synthesize HDRDetectionEnabled=_HDRDetectionEnabled;
@property(nonatomic) _Bool userLockedExposure; // @synthesize userLockedExposure=_userLockedExposure;
@property(nonatomic) _Bool userLockedFocus; // @synthesize userLockedFocus=_userLockedFocus;
@property(nonatomic) _Bool resetExposureWhenSubjectAreaChanged; // @synthesize resetExposureWhenSubjectAreaChanged=_resetExposureWhenSubjectAreaChanged;
@property(nonatomic) _Bool resetFocusWhenSubjectAreaChanged; // @synthesize resetFocusWhenSubjectAreaChanged=_resetFocusWhenSubjectAreaChanged;
@property(nonatomic, getter=isCapturingTimelapse) _Bool capturingTimelapse; // @synthesize capturingTimelapse=_capturingTimelapse;
@property(nonatomic) _Bool use60FPSVideo; // @synthesize use60FPSVideo=_use60FPSVideo;
@property(nonatomic) _Bool canCapturePhotoFromVideoModeWhenNotRecording; // @synthesize canCapturePhotoFromVideoModeWhenNotRecording=_canCapturePhotoFromVideoModeWhenNotRecording;
@property(nonatomic) int captureOrientation; // @synthesize captureOrientation=_captureOrientation;
@property(copy, nonatomic) CDUnknownBlockType postSessionSetupBlock; // @synthesize postSessionSetupBlock;
@property(readonly, nonatomic) struct CGRect cleanAperture; // @synthesize cleanAperture=_cleanAperture;
@property(readonly, nonatomic) struct CGSize panoramaPreviewSize; // @synthesize panoramaPreviewSize=_panoramaPreviewSize;
@property(readonly, nonatomic) float panoramaPreviewScale; // @synthesize panoramaPreviewScale=_panoramaPreviewScale;
@property(readonly, nonatomic) AVCaptureVideoPreviewLayer *previewLayer; // @synthesize previewLayer=_previewLayer;
@property(readonly, nonatomic) AVCaptureStillImageOutput *imageOutput; // @synthesize imageOutput=_avCaptureOutputPhoto;
@property(nonatomic) AVCaptureOutput *currentOutput; // @synthesize currentOutput=_currentOutput;
@property(nonatomic) AVCaptureDeviceInput *currentInput; // @synthesize currentInput=_currentInput;
@property(nonatomic) AVCaptureDevice *currentDevice; // @synthesize currentDevice=_currentDevice;
@property(readonly, nonatomic) AVCaptureSession *currentSession; // @synthesize currentSession=_avCaptureSession;
- (void).cxx_destruct;
- (void)_panoramaDidReceiveErrorNotificationString:(struct __CFString *)arg1;
- (void)_panoramaDidReceiveWarningNotificationString:(struct __CFString *)arg1;
- (void)_panoramaDidReceiveStatusNotificationString:(struct __CFString *)arg1;
- (void)_panoramaDidReceiveIssueWithPanoramaString:(struct __CFString *)arg1;
- (void)_panoShouldEnd;
- (void)_deviceConfigurationForPanoramaOptions:(struct __CFDictionary *)arg1 captureDevice:(id)arg2 deviceFormat:(id *)arg3 minFrameDuration:(CDStruct_198678f7 *)arg4 maxFrameDuration:(CDStruct_198678f7 *)arg5;
- (void)_createAssetForPanoramaResponse:(id)arg1;
- (void)_processPanoramaRequest:(id)arg1;
- (void)stopPanoramaCapture;
- (void)enqueuePanoramaRequest:(id)arg1;
- (id)_sanitizePanoramaCaptureRequest:(id)arg1;
- (void)_verifyVideoConsolidationForVideoResponse:(id)arg1;
- (void)_movieFileRecordingCompleted:(id)arg1;
- (void)_createAssetForVideoCaptureResponse:(id)arg1;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3;
- (void)_applyCaptureSettingsFromVideoRequest:(id)arg1;
- (void)_applyTorchSettingsFromVideoRequest:(id)arg1;
- (void)enqueueVideoCaptureRequest:(id)arg1;
- (id)_sanitizeVideoCaptureRequest:(id)arg1;
- (void)_updateImagePickerMetadataForResponse:(id)arg1;
- (void)_updateResponse:(id)arg1 withSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 metadata:(id)arg3 error:(id)arg4;
- (void)_saveStillImageResponse:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_completedWriteForResponse:(id)arg1 request:(id)arg2 error:(id)arg3;
- (void)_completedResponse:(id)arg1 forRequest:(id)arg2 error:(id)arg3;
- (void)_generatedResponse:(id)arg1 forRequest:(id)arg2 error:(id)arg3;
- (id)_stillImageCaptureResponseForRequest:(id)arg1 error:(id)arg2;
- (_Bool)enqueueStillImageCaptureRequest:(id)arg1;
- (void)_applyCaptureSettingsFromStillImageRequest:(id)arg1 withConnection:(id)arg2;
- (void)_applyAudioSettingsFromRequest:(id)arg1;
- (void)_applyStillImageStabilizationSettingsFromRequest:(id)arg1;
- (void)_applyHDRSettingsFromRequest:(id)arg1;
- (void)_applyFlashSettingsFromRequest:(id)arg1;
- (id)_sanitizeStillImageRequest:(id)arg1;
- (_Bool)_isCapturingStillFromVideoMode;
- (void)_updateOrientationForConnection:(id)arg1;
- (long long)_addOrientationMetadataToResponse:(id)arg1;
- (id)_captureConnectionForStillImageCapture;
- (void)_notifyServicesOfCompletedResponse:(id)arg1 error:(id)arg2;
- (void)_notifyServicesOfGeneratedResponse:(id)arg1 error:(id)arg2;
- (void)_notifyServicesOfEnqueuedRequest:(id)arg1;
- (long long)_serviceTypeForCaptureRequest:(id)arg1;
- (void)_destroyAllServices;
- (void)_createTimelapseServicesIfNecessary;
- (void)_createPanoramaServicesIfNecessary;
- (void)_createVideoServicesIfNecessary;
- (void)_createStillImageServicesIfNecessary;
- (void)_createServicesIfNecessaryForMode:(long long)arg1;
- (void)_capturedPhotoWithCaptureDictionary:(id)arg1 metadata:(id)arg2;
- (void)_enableKeepAliveFailsafeTimer;
- (void)_forceKeepAliveFailsafeTimeout;
- (void)_teardownKeepAliveFailsafeTimer;
- (void)_setKeepAlive:(_Bool)arg1 forVideoCapture:(_Bool)arg2;
- (void)_checkKeepAliveStatus;
- (void)_teardownKeepAliveTimer;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)cameraEffectsRenderer:(id)arg1 didFinishTransitionToShowGrid:(_Bool)arg2;
- (void)cameraEffectsRenderer:(id)arg1 didStartTransitionToShowGrid:(_Bool)arg2 animated:(_Bool)arg3;
- (void)cameraEffectsRenderer:(id)arg1 willTransitionToShowGrid:(_Bool)arg2;
- (void)cameraEffectsRenderer:(id)arg1 requestsVideoDataOutputEnabled:(_Bool)arg2;
- (void)cameraEffectsRenderer:(id)arg1 requestsPreviewLayerEnabled:(_Bool)arg2;
- (void)cameraEffectsRendererDidStartPreview:(id)arg1;
- (void)_updateEffectsVideoDataOutputEnabled;
@property(nonatomic, setter=_setVideoDataOutputEnabledForRenderer:) _Bool _videoDataOutputEnabledForRenderer; // @synthesize _videoDataOutputEnabledForRenderer=__videoDataOutputEnabledForRenderer;
- (void)_updatePreviewLayerEnabled;
@property(nonatomic, setter=_setPreviewLayerEnabledForRenderer:) _Bool _previewLayerEnabledForRenderer; // @synthesize _previewLayerEnabledForRenderer=__previewLayerEnabledForRenderer;
@property(nonatomic, getter=_isPreviewPaused, setter=_setPreviewPaused:) _Bool _previewPaused; // @synthesize _previewPaused=__previewPaused;
- (void)resumePreview;
- (void)pausePreview;
- (id)recentFaceMetadata;
- (void)_resetRecentFaceMetadata;
- (long long)numberOfCapturedAvalanchePhotos;
- (_Bool)canContinueAvalancheCapture;
- (void)finishAvalancheCapture;
- (void)cancelAvalancheCapture;
- (void)startAvalancheCapture;
- (id)_mogulFormatFromDevice:(id)arg1 frameRate:(double)arg2;
@property(readonly, nonatomic) _Bool allowsAlternateSlomoRear;
@property(readonly, nonatomic) _Bool allowsAlternateSlomoFront;
- (double)mogulFrameRate;
- (double)currentMaxFrameDuration;
- (double)currentMinFrameDuration;
@property(nonatomic, setter=_setEffectsAvailable:) _Bool _effectsAvailable;
- (void)setEffectFilterIndices:(id)arg1 forceStateChange:(_Bool)arg2;
- (id)effectFilterIndices;
- (void)_notifyEffectFilterIndexChanged;
- (void)setEffectFilterIndex:(unsigned long long)arg1 forMode:(long long)arg2;
- (unsigned long long)_sanitizeEffectFilterIndex:(unsigned long long)arg1 forMode:(long long)arg2;
- (unsigned long long)effectFilterIndexForMode:(long long)arg1;
@property(readonly, retain, nonatomic) CIFilter *activeFilter;
- (unsigned long long)_activeFilterIndex;
- (void)_updateEffectsRendererFilterIndexForceStateChange:(_Bool)arg1 renderNotifyBlock:(CDUnknownBlockType)arg2;
- (void)_updateEffectsRendererMirroring;
- (void)_updateSupportedCameraModes;
- (void)cancelVideoZoomRamp;
- (void)rampToVideoZoomFactor:(double)arg1 withRate:(float)arg2;
@property(nonatomic) double videoZoomFactor;
- (double)_limitZoomFactor:(double)arg1 forDevice:(id)arg2;
- (void)_setOrientationEventsEnabled:(_Bool)arg1;
@property(readonly, nonatomic) long long cameraOrientation;
- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(int)arg2;
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;
- (void)postOrientationChangedNotification:(long long)arg1 force:(_Bool)arg2;
@property(readonly, nonatomic) _Bool isStillImageStabilizationActive;
- (_Bool)supportsLiveEffects;
- (_Bool)supportsAvalancheAnalysisForDevice:(long long)arg1;
- (void)_synchronizeSettings;
- (_Bool)supportsPreviewDuringHDR;
- (void)_suggestedHDRChanged;
@property(readonly, nonatomic, getter=isHDRSuggested) _Bool HDRSuggested;
- (_Bool)_supportsHDRSuggestionForCaptureDevice:(id)arg1;
- (_Bool)supportsHDRSuggestionForDevice:(long long)arg1;
@property(readonly, nonatomic) _Bool supportsHDRSuggestion;
- (_Bool)supportsHDRForDevice:(long long)arg1 mode:(long long)arg2;
@property(readonly, nonatomic) _Bool supportsHDR;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)isTorchDisabled;
- (void)_updateTorchAvailability;
- (_Bool)isTorchOn;
- (_Bool)isTorchActive;
- (_Bool)flashWillFire;
@property(nonatomic) long long flashMode;
- (_Bool)hasFrontFlash;
- (_Bool)hasRearFlash;
- (void)_setFlashMode:(long long)arg1 force:(_Bool)arg2;
- (void)_torchLevelChanged;
- (void)_runOnMainThreadImmediatelyIfPossibleWithBlock:(CDUnknownBlockType)arg1;
- (void)_torchActiveChanged;
- (void)_flashStateChanged;
- (void)_setEndianAndCircularTestEnabled:(_Bool)arg1;
- (void)setFaceDetectionEnabled:(_Bool)arg1 forceDisableImageProcessing:(_Bool)arg2;
- (void)_setFaceDetectionEnabled:(_Bool)arg1 forceDisableImageProcessing:(_Bool)arg2 forCaptureDevice:(id)arg3 captureOutput:(id)arg4;
- (void)_faceMetadataDidChange:(id)arg1;
- (void)_faceRectangleChanged;
- (struct CGRect)faceRectangle;
- (_Bool)isFocusingOnFace;
- (void)_debugFocusState;
- (void)_setSubjectAreaChangeMonitoringEnabled:(_Bool)arg1;
- (void)_enableSubjectAreaChangedMonitoringIfNeededFromFocusCompleted:(_Bool)arg1 fromExposureCompleted:(_Bool)arg2;
- (_Bool)_shouldResetExposureWhenSubjectAreaChanged;
- (_Bool)_shouldResetFocusWhenSubjectAreaChanged;
- (void)_disableSubjectAreaChangeMonitoringIfNeeded;
- (void)_resetFocus:(_Bool)arg1 andExposure:(_Bool)arg2;
- (void)_resetFocusAndExposureIfNotExplicitlyLocked;
- (void)resetFocusAndExposureIfNotExplicitlyLocked;
- (void)resumeSubjectAreaChangesAfterDelay:(double)arg1;
- (void)suspendSubjectAreaChanges;
- (void)_subjectAreaDidChange:(id)arg1;
- (void)_exposureTargetBiasChanged;
- (void)_whiteBalanceCompleted;
- (void)_whiteBalanceStarted;
- (void)_exposureCompleted;
- (void)_exposureStarted;
- (void)_focusCompleted;
- (void)_focusStarted;
- (void)_lockFocusForAvalancheCapture;
- (_Bool)_useSmoothFocus;
- (void)_updateFocusAndExposureForVideoRecording;
- (void)_lockFocusAndExposureForPano;
- (void)_cancelDelayedFocusRequests;
- (void)performAutofocusAfterCapture;
- (void)_autofocusAfterCapture;
- (_Bool)isExposureModeCenteredContinuous;
- (void)_startContinuousAutoExposureAtCenter;
- (_Bool)_isFocusModeContinuousAutoFocusAtCenter;
- (void)_startContinuousAutoFocusAtCenter;
- (void)_startContinuousAEAFAtCenter;
- (void)restartContinuousAEAFAtCenter;
- (void)smoothFocusAtCenterForVideoRecording;
@property(nonatomic) struct CGPoint exposurePointOfInterest;
@property(nonatomic) struct CGPoint focusPointOfInterest;
- (_Bool)isExposurePointOfInterestSupported;
- (_Bool)isFocusPointOfInterestSupported;
- (_Bool)isExposing;
- (_Bool)isFocusing;
@property(nonatomic) float exposureTargetBias;
@property(readonly, nonatomic) float exposureTargetBiasMax;
@property(readonly, nonatomic) float exposureTargetBiasMin;
@property(readonly, nonatomic) float exposureTargetBiasDefault;
- (long long)_whiteBalanceModeForExposureMode:(long long)arg1;
- (void)_updateWhiteBalanceModeForExposureMode:(long long)arg1;
- (void)_setExposureMode:(long long)arg1;
- (void)setExposureMode:(int)arg1;
- (void)_pptTestSetAutofocusDisabled:(_Bool)arg1;
- (void)_setFocusModeLockedWithLensPosition;
- (void)_setFocusMode:(long long)arg1 forceSmoothFocus:(_Bool)arg2;
- (float)focusLensPosition;
- (void)setFocusModeLockedWithLensPosition:(float)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)setFocusMode:(int)arg1;
- (int)effectiveExposureMode;
- (int)effectiveFocusMode;
- (void)setUserLockedFocus:(_Bool)arg1 exposure:(_Bool)arg2;
- (_Bool)isSupportedExposureMode:(int)arg1;
- (_Bool)isSupportedFocusMode:(int)arg1;
- (void)setFocusDisabled:(_Bool)arg1;
- (_Bool)_modeAllowsAEAF;
- (_Bool)currentlyAllowedToExposeAtPointOfInterestWithMode:(int)arg1;
- (_Bool)currentlyAllowedToFocusAtPointOfInterestWithMode:(int)arg1;
- (_Bool)canChangeFocusOrExposure;
- (void)unlockDeviceForFocusConfiguration;
- (_Bool)lockDeviceForFocusConfiguration;
- (int)_CMKExposureModeForAVExposureMode:(long long)arg1;
- (int)_CMKFocusModeForAVFocusMode:(long long)arg1;
- (long long)_AVExposureModeForCMKExposureMode:(int)arg1;
- (long long)_AVFocusModeForCMKFocusMode:(int)arg1;
- (void)_updateIdleTimerForCapturingTimelapseChanged;
- (void)_updateIdleTimerForDidFinishRecording;
- (void)_updateIdleTimerForDidFinishVideoRecording;
- (void)_updateIdleTimerForStopVideoCapture;
- (void)_disableIdleIndefinitely;
- (void)_updateIdleTimerForStartVideoCapture;
- (void)_updateIdleTimerForStillImageCaptured;
- (void)_updateIdleTimerForPreviewStopped;
- (void)_updateIdleTimerForPreviewStarted;
- (void)_resetIdleTimer;
- (void)_delayIdleTimerByTimeInterval:(double)arg1;
- (_Bool)_shouldDisableLocationForTimelapseRecording;
- (void)notifyLocationAcquiredForTimelapse;
- (void)setPanoramaImageQueueLayer:(id)arg1;
- (_Bool)isCapturingPanorama;
- (_Bool)canCapturePanorama;
- (_Bool)supportsPanorama;
- (void)setVideoCaptureMaximumDuration:(double)arg1;
- (void)setVideoCaptureQuality:(int)arg1;
- (id)videoCapturePath;
- (void)stopVideoCapture;
- (double)minimumVideoCaptureDuration;
- (void)startVideoCapture;
- (void)_setVideoCapturePath:(id)arg1;
- (id)_videoMetadataArrayIncludingSensitiveProperties:(_Bool)arg1;
- (void)_setOrientation;
- (void)_setOrientationForConnection:(id)arg1;
- (_Bool)canCaptureVideo;
- (void)_verifyVideoConsolidationForVideoAtPath:(id)arg1 outUserInfo:(id *)arg2;
- (void)_removeVideoCaptureFileAndDirectoryAtPath:(id)arg1;
- (_Bool)isCapturingVideo;
- (void *)_newFilteredSurfaceFromSurface:(void *)arg1 filters:(id)arg2;
- (_Bool)capturePhotoUsingHDR:(_Bool)arg1;
- (void)capturePhoto;
- (_Bool)imageWriterQueueIsAvailable;
- (_Bool)_canCapturePhotoFromVideoMode;
- (_Bool)canCapturePhotoDuringRecording;
- (_Bool)canCapturePhoto;
- (void)_didTakePhoto;
- (void)_willTakePhoto;
- (void)_capturedPhotoWithDictionary:(id)arg1 error:(id)arg2 HDRUsed:(_Bool)arg3;
- (void)_processCapturedPhotoWithDictionary:(id)arg1 error:(id)arg2 HDRUsed:(_Bool)arg3;
- (_Bool)_sanityCheckSessionCanCaptureWithOutput:(id)arg1;
- (void)_sessionRuntimeErrored:(id)arg1;
- (void)_interruptionEnded:(id)arg1;
- (void)_wasInterrupted:(id)arg1;
- (void)_serverDied:(id)arg1;
- (void)_recoverFromServerError:(id)arg1;
- (void)stopPreview;
- (void)_previewStarted;
- (void)_clearPreviewLayer;
- (_Bool)isPreviewMirrored;
@property(nonatomic) int previewOrientation;
- (void)startPreview;
- (void)startPreview:(CDUnknownBlockType)arg1;
- (void)_startPreview:(CDUnknownBlockType)arg1;
- (void)_startPreviewWithCameraDevice:(long long)arg1 cameraMode:(long long)arg2 effectFilterIndices:(id)arg3;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (_Bool)_didSendPreviewStartedCallbackToEmptyDelegate;
- (void)_sessionStopped:(id)arg1;
- (void)_sessionStarted:(id)arg1;
- (void)_deviceStarted:(id)arg1;
- (void)_tearDownCamera;
- (void)_setDelaySuspend:(_Bool)arg1;
- (void)_forceDelaySuspendTimeout;
- (void)_teardownDelaySuspendTimer;
- (void)_destroyCamera;
- (_Bool)_setupCamera;
- (id)_currentVideoConnection;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_debug_checkIris;
- (void)_debug_cancelWaitForIris;
- (void)_debug_waitForIrisToOpen;
- (id)_debug_dispatchTimerQueue;
- (void)_debug_teardownDispatchTimer;
- (void)_jankyPreviewStartedWorkaround;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationSuspended:(id)arg1;
- (double)maximumZoomFactorForDevice:(long long)arg1;
- (double)minimumZoomFactorForDevice:(long long)arg1;
- (void)_unlockCurrentDeviceForConfiguration;
- (_Bool)_lockCurrentDeviceForConfiguration;
@property(nonatomic) _Bool isCameraApp;
- (void)_setLocationEnabled:(_Bool)arg1;
- (_Bool)_modeUsesCompassHeading;
- (void)_inputPortFormatDescriptionDidChange:(id)arg1;
@property(nonatomic) _Bool convertSampleBufferToJPEG;
@property(nonatomic) long long cameraDevice;
- (_Bool)hasRearCamera;
- (_Bool)hasFrontCamera;
- (void)_setDefaultPrewarmDate:(id)arg1;
@property(nonatomic, getter=_isModeChangeWaitingForConfigureSession, setter=_setModeChangeWaitingForConfigureSession:) _Bool _modeChangeWaitingForConfigureSession;
@property(nonatomic, getter=_isModeChangeWaitingForPreviewStarted, setter=_setModeChangeWaitingForPreviewStarted:) _Bool _modeChangeWaitingForPreviewStarted;
- (void)_notifyControllerModeDidChange;
- (id)_captureMainQueueConfigurationOptions;
- (void)_setCameraMode:(long long)arg1 cameraDevice:(long long)arg2 forceConfigure:(_Bool)arg3;
- (void)_setCameraMode:(long long)arg1 cameraDevice:(long long)arg2;
@property(nonatomic) long long cameraMode;
- (void)setCameraMode:(long long)arg1 device:(long long)arg2;
- (id)_videoModeSessionPresetForDevice:(long long)arg1 options:(id)arg2;
- (id)_photoModeSessionPresetForMode:(long long)arg1 device:(long long)arg2;
- (_Bool)_configureSessionWithCameraMode:(long long)arg1 cameraDevice:(long long)arg2 options:(id)arg3;
- (_Bool)_safeSetCameraMode:(long long)arg1 cameraDevice:(long long)arg2;
- (_Bool)supportsVideoCapture;
- (_Bool)isChangingModes;
- (void)executeBlockOnMainQueue:(CDUnknownBlockType)arg1;
- (void)enqueueBlockOnMainQueue:(CDUnknownBlockType)arg1;
- (void)enqueueBlockInCaptureSessionQueue:(CDUnknownBlockType)arg1;
- (_Bool)isReady;
- (void)_imageWriterQueueAvailabilityChanged;
- (void)releaseIOSurface;
- (void)captureIOSurface;
- (_Bool)hasInheritedForegroundState;
- (_Bool)inCall;
- (void)_inCallStatusChanged:(_Bool)arg1;
- (void)_callStateDidChange:(id)arg1;
- (void)_updateCallStatus;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

