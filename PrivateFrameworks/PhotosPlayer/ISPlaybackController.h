//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PhotosPlayer/ISAVPlayerControllerDelegate-Protocol.h>
#import <PhotosPlayer/ISPlaybackStateTransitionManagerDelegate-Protocol.h>

@class AVPlayerItem, ISAVPlayerController, ISPlaybackSpec, ISPlaybackStateTransitionManager, ISReuseQueue, ISWrappedAVPlayer, NSError, NSHashTable, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface ISPlaybackController : NSObject <ISPlaybackStateTransitionManagerDelegate, ISAVPlayerControllerDelegate>
{
    _Bool _videoVisible;
    NSHashTable *_observers;
    NSObject<OS_dispatch_queue> *_observerQueue;
    _Bool _shouldReusePlayer;
    _Bool _applyScaleToVideo;
    _Bool _playingVitality;
    float _volume;
    float _timeOffset;
    float _vitalityPlayRate;
    float _vitalityHintPlayRate;
    float _hintProgress;
    float _playRate;
    ISPlaybackSpec *_playbackSpec;
    double _prePhotoGapTime;
    AVPlayerItem *_videoPlayerItem;
    double _crossfadeDuration;
    double _maximumVideoTransitionDelay;
    long long _playbackState;
    CDUnknownBlockType _playbackEndHandler;
    long long _videoPlayerStatus;
    NSError *_videoPlayerError;
    ISReuseQueue *__playerReuseQueue;
    NSHashTable *__outputs;
    long long __currentTransitionRequestID;
    ISAVPlayerController *__avPlayerController;
    ISPlaybackStateTransitionManager *__transitionManager;
    long long __previousPlaybackState;
    ISWrappedAVPlayer *__videoPlayer;
    id __videoPlayerPerformanceDiagnosticsTimeObserver;
    long long __currentPlaybackID;
    long long __hasStartedVideoForCurrentPlayback;
    double __videoPlaybackRequestTime;
    double __crossfadePlaybackStartTime;
    double __lastHintProgress;
    CDStruct_1b6d18a9 _idleTime;
    CDStruct_1b6d18a9 __videoDuration;
}

+ (void)resetPlayerCache;
+ (id)_sharedPlayerReuseQueue;
+ (id)avfQueue;
@property(setter=_setVideoDuration:) CDStruct_1b6d18a9 _videoDuration; // @synthesize _videoDuration=__videoDuration;
@property(nonatomic, setter=_setLastHintProgress:) double _lastHintProgress; // @synthesize _lastHintProgress=__lastHintProgress;
@property(nonatomic, setter=_setCrossfadePlaybackStartTime:) double _crossfadePlaybackStartTime; // @synthesize _crossfadePlaybackStartTime=__crossfadePlaybackStartTime;
@property(nonatomic, setter=_setVideoPlaybackRequestTime:) double _videoPlaybackRequestTime; // @synthesize _videoPlaybackRequestTime=__videoPlaybackRequestTime;
@property(nonatomic, setter=_setHasStartedVideoForCurrentPlayback:) long long _hasStartedVideoForCurrentPlayback; // @synthesize _hasStartedVideoForCurrentPlayback=__hasStartedVideoForCurrentPlayback;
@property(nonatomic, setter=_setCurrentPlaybackID:) long long _currentPlaybackID; // @synthesize _currentPlaybackID=__currentPlaybackID;
@property(readonly, nonatomic) id _videoPlayerPerformanceDiagnosticsTimeObserver; // @synthesize _videoPlayerPerformanceDiagnosticsTimeObserver=__videoPlayerPerformanceDiagnosticsTimeObserver;
@property(readonly, nonatomic) ISWrappedAVPlayer *_videoPlayer; // @synthesize _videoPlayer=__videoPlayer;
@property(nonatomic, setter=_setPreviousPlaybackState:) long long _previousPlaybackState; // @synthesize _previousPlaybackState=__previousPlaybackState;
@property(readonly, nonatomic) ISPlaybackStateTransitionManager *_transitionManager; // @synthesize _transitionManager=__transitionManager;
@property(readonly, nonatomic) ISAVPlayerController *_avPlayerController; // @synthesize _avPlayerController=__avPlayerController;
@property(nonatomic, setter=_setCurrentTransitionRequestID:) long long _currentTransitionRequestID; // @synthesize _currentTransitionRequestID=__currentTransitionRequestID;
@property(readonly, nonatomic) NSHashTable *_outputs; // @synthesize _outputs=__outputs;
@property(readonly, nonatomic) ISReuseQueue *_playerReuseQueue; // @synthesize _playerReuseQueue=__playerReuseQueue;
- (void)_setVideoPlayerError:(id)arg1;
@property(retain, nonatomic) NSError *videoPlayerError; // @synthesize videoPlayerError=_videoPlayerError;
@property(nonatomic) long long videoPlayerStatus; // @synthesize videoPlayerStatus=_videoPlayerStatus;
@property(copy, nonatomic) CDUnknownBlockType playbackEndHandler; // @synthesize playbackEndHandler=_playbackEndHandler;
- (void)_setPlayRate:(float)arg1;
@property(nonatomic) float playRate; // @synthesize playRate=_playRate;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
- (void)_setHintProgress:(float)arg1;
@property(nonatomic) float hintProgress; // @synthesize hintProgress=_hintProgress;
@property(nonatomic) float vitalityHintPlayRate; // @synthesize vitalityHintPlayRate=_vitalityHintPlayRate;
- (void)_setVitalityPlayRate:(float)arg1;
@property(nonatomic) float vitalityPlayRate; // @synthesize vitalityPlayRate=_vitalityPlayRate;
@property(nonatomic, getter=isPlayingVitality) _Bool playingVitality; // @synthesize playingVitality=_playingVitality;
- (void)_setTimeOffset:(float)arg1;
@property(nonatomic) float timeOffset; // @synthesize timeOffset=_timeOffset;
@property(nonatomic) double maximumVideoTransitionDelay; // @synthesize maximumVideoTransitionDelay=_maximumVideoTransitionDelay;
@property(nonatomic) CDStruct_1b6d18a9 idleTime; // @synthesize idleTime=_idleTime;
@property(nonatomic) double crossfadeDuration; // @synthesize crossfadeDuration=_crossfadeDuration;
@property(retain, nonatomic) AVPlayerItem *videoPlayerItem; // @synthesize videoPlayerItem=_videoPlayerItem;
@property(nonatomic) double prePhotoGapTime; // @synthesize prePhotoGapTime=_prePhotoGapTime;
@property(nonatomic) _Bool applyScaleToVideo; // @synthesize applyScaleToVideo=_applyScaleToVideo;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(retain, nonatomic) ISPlaybackSpec *playbackSpec; // @synthesize playbackSpec=_playbackSpec;
- (void).cxx_destruct;
- (CDStruct_1b6d18a9)cachedDuration;
- (void)avPlayerControllerDidEndSeeking:(id)arg1 seekTime:(CDStruct_1b6d18a9)arg2 didFinish:(_Bool)arg3;
- (void)_callPlaybackEndHandler;
- (void)avPlayerControllerDidEndPlaying:(id)arg1;
- (void)avPlayerControllerWillEndPlaying:(id)arg1;
- (void)avPlayerControllerDidBeginPlaying:(id)arg1;
- (void)transitionManager:(id)arg1 didEndTransitionToPlaybackState:(long long)arg2 forRequestID:(long long)arg3 finished:(_Bool)arg4;
- (void)_enumerateObserversWithBlock:(CDUnknownBlockType)arg1;
- (void)_configureOutput:(id)arg1;
- (void)_didEndTransitionToPlaybackState:(long long)arg1 forTransitionRequestID:(long long)arg2 finished:(_Bool)arg3;
- (CDStruct_1b6d18a9)_playbackEndTime;
- (CDStruct_1b6d18a9)_playbackStartTime;
- (void)_videoDidPlayToEndTime;
- (void)_videoWillPlayToEndTime;
- (void)_startVideoPlaybackWithPlaybackID:(long long)arg1;
- (void)_performBeginPlaybackTransition;
- (void)_updatePlayingVitality;
- (void)_updatePlayerControllerVolume;
- (void)_updatePlayerController;
- (void)_handleMediaServiceResetIfNecessaryWithError:(id)arg1;
- (void)_updateStatus;
- (void)_setVideoPlayerStatus:(long long)arg1;
- (void)_setPlayingVitality:(_Bool)arg1;
- (void)_setPlaybackState:(long long)arg1;
- (void)transitionToPlaybackState:(long long)arg1 playRate:(float)arg2 withTimeOffset:(float)arg3 vitalityPlayRate:(float)arg4 hintProgress:(float)arg5;
- (void)unregisterObserver:(id)arg1;
- (void)registerObserver:(id)arg1;
- (void)removeOutput:(id)arg1;
- (void)addOutput:(id)arg1;
@property(readonly, nonatomic) NSSet *outputs;
- (void)dealloc;
- (id)initWithVideoPlayer:(id)arg1;
- (id)init;
- (void)avPlayerController:(id)arg1 avPlayer:(id)arg2 didChangeToStatus:(long long)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

